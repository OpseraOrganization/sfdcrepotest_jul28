<?xml version="1.0" encoding="UTF-8"?>
<CustomObject xmlns="http://soap.sforce.com/2006/04/metadata">
    <validationRules>
        <fullName>BGs_is_a_required_field</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
ISPICKVAL(Type,&quot;CH or HWS Issue&quot;),

RecordType.Name = &apos;SF Support&apos;,
ISPICKVAL(BGs__c, &quot;&quot;)
)</errorConditionFormula>
        <errorMessage>Please select appropriate &apos;BGs&apos; field if you pick the Type as &apos;CH SWS or HWS Issue&apos;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_AllignedP20Fields</fullName>
        <active>true</active>
        <description>Check if all the P20 fields are either populated or blank</description>
        <errorConditionFormula>AND(
CH_RecordTypeCheck__c,
OR( ISNEW(), ISCHANGED(CH_PlantCode__c) ,ISCHANGED(CH_LocalServiceOrder__c), ISCHANGED(CH_GlobalServiceOrder__c)),
NOT(OR(AND(ISBLANK(CH_PlantCode__c), ISBLANK(CH_LocalServiceOrder__c), ISBLANK(CH_GlobalServiceOrder__c)), AND(NOT(ISBLANK(CH_PlantCode__c)), NOT(ISBLANK(CH_LocalServiceOrder__c)), NOT(ISBLANK(CH_GlobalServiceOrder__c))))))</errorConditionFormula>
        <errorMessage>Local Service Order, Global Service Order and Plant Code fields all need be populated or all left blank</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_AllowedChangesNew</fullName>
        <active>false</active>
        <description>Allowed changes on severity and outage feilds</description>
        <errorConditionFormula>OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; ,
    RecordType.DeveloperName = &apos;CH_NokiaIncidentWithRestoration&apos;,
    RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;,
    RecordType.DeveloperName = &apos;CH_Problem&apos;) &amp;&amp;
( $User.Id  =  Owner:User.Id ) &amp;&amp;
((ISPICKVAL( PRIORVALUE( Severity__c ) , &apos;Critical&apos;) &amp;&amp; 
 ISPICKVAL( PRIORVALUE( CH_Outage__c ) , &apos;No&apos;)) &amp;&amp; NOT(ISPICKVAL( Severity__c , &apos;Major&apos;) &amp;&amp;   ISPICKVAL(  CH_Outage__c , &apos;Yes&apos;) || ISPICKVAL( Severity__c , &apos;Critical&apos;) &amp;&amp;   ISPICKVAL(  CH_Outage__c , &apos;Yes&apos;) || ISPICKVAL( Severity__c , &apos;Major&apos;) &amp;&amp;   ISPICKVAL(  CH_Outage__c , &apos;No&apos;) || ISPICKVAL( Severity__c , &apos;Minor&apos;) &amp;&amp;   ISPICKVAL(  CH_Outage__c , &apos;No&apos;) || 
ISPICKVAL( Severity__c ,&apos;Critical&apos;) &amp;&amp;   ISPICKVAL(  CH_Outage__c , &apos;No&apos;) ))</errorConditionFormula>
        <errorMessage>You are not allowed to change the Severity and outage fields based on your prior values</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_AssessedOutage</fullName>
        <active>true</active>
        <description>The flag &quot;Assessed Outage&quot; needs to be put to Yes.</description>
        <errorConditionFormula>AND(CH_Record_Type_Check_Condition__c, 
ISPICKVAL(Status , &apos;Closed&apos;),
ISBLANK(TEXT(CH_AssessedOutage__c))
)</errorConditionFormula>
        <errorDisplayField>CH_AssessedOutage__c</errorDisplayField>
        <errorMessage>&quot;Assessed Outage&quot; needs to be put to Yes for closing a case.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_AssignedDate1</fullName>
        <active>true</active>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c,
NOT(ISNULL(PRIORVALUE(CH_AssignedDate__c))), 
ISBLANK(CH_AssignedDate__c), 
AND(NOT(ISPICKVAL(Status , &quot;Draft&quot;)),NOT( ISPICKVAL(Status , &quot;Created&quot;))) 
)</errorConditionFormula>
        <errorDisplayField>CH_AssignedDate__c</errorDisplayField>
        <errorMessage>Cannot clear the value in Assigned Date/Time field if the Status is not Created or Draft.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_BlockingStatusTransitions</fullName>
        <active>true</active>
        <description>Incorrect transition of status.</description>
        <errorConditionFormula>OR(
AND( CH_Record_Type_Check_Condition__c,ISPICKVAL(PRIORVALUE(Status),&quot;Draft&quot;),
OR(
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Responded in Progress&quot;),
ISPICKVAL(Status,&quot;Pending Customer&quot;),
ISPICKVAL(Status,&quot;Restoration Provided&quot;),
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;),
ISPICKVAL(Status,&quot;Solution Provided&quot;),
ISPICKVAL(Status,&quot;Closed&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c ,ISPICKVAL(PRIORVALUE(Status ),&quot;Created&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Responded in Progress&quot;),
ISPICKVAL(Status,&quot;Pending Customer&quot;),
ISPICKVAL(Status,&quot;Restoration Provided&quot;),
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;),
ISPICKVAL(Status,&quot;Solution Provided&quot;),
ISPICKVAL(Status,&quot;Closed&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c,ISPICKVAL(PRIORVALUE(Status),&quot;Cancelled&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Responded in Progress&quot;),
ISPICKVAL(Status,&quot;Pending Customer&quot;),
ISPICKVAL(Status,&quot;Restoration Provided&quot;),
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;),
ISPICKVAL(Status,&quot;Solution Provided&quot;),
ISPICKVAL(Status,&quot;Closed&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND(
CH_Record_Type_Check_Condition__c,ISPICKVAL(PRIORVALUE(Status),&quot;Assigned&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Pending Customer&quot;),
ISPICKVAL(Status,&quot;Restoration Provided&quot;),
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;),
ISPICKVAL(Status,&quot;Solution Provided&quot;),
ISPICKVAL(Status,&quot;Closed&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND(
CH_Record_Type_Check_Condition__c,ISPICKVAL(PRIORVALUE(Status),&quot;Responded in Progress&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Cancelled&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c,ISPICKVAL(PRIORVALUE(Status),&quot;Pending Customer&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Cancelled&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c ,ISPICKVAL(PRIORVALUE(Status),&quot;Restoration Provided&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Cancelled&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c ,ISPICKVAL(PRIORVALUE(Status ),&quot;Temp Sol. Provided&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Cancelled&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c ,ISPICKVAL(PRIORVALUE(Status ),&quot;Solution Provided&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Cancelled&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Pending Customer&quot;),
ISPICKVAL(Status,&quot;Completed&quot;))),
AND( 
CH_Record_Type_Check_Condition__c ,ISPICKVAL(PRIORVALUE(Status ),&quot;Closed&quot;),
OR(
ISPICKVAL(Status,&quot;Draft&quot;),
ISPICKVAL(Status,&quot;Created&quot;),
ISPICKVAL(Status,&quot;Cancelled&quot;),
ISPICKVAL(Status,&quot;Assigned&quot;),
ISPICKVAL(Status,&quot;Pending Customer&quot;))),
AND(
NOT(RecordType.Name = &quot;Nokia Incident with Restoration&quot;),
ISPICKVAL(PRIORVALUE(Status),&quot;Responded in Progress&quot;),
ISPICKVAL(Status,&quot;Restoration Provided&quot;)),
AND(
RecordType.Name = &quot;Nokia Incident with Restoration&quot;,
ISPICKVAL(PRIORVALUE(Status),&quot;Responded in Progress&quot;),
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;))
)</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Incorrect transition of status.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_BlockingStatusTransitions2</fullName>
        <active>true</active>
        <description>Incorrect transition of status.</description>
        <errorConditionFormula>OR(
AND( 
RecordType.Name = &quot;Nokia Incident with Restoration&quot;, 
ISPICKVAL(PRIORVALUE(Status),&quot;Responded in Progress&quot;), 
ISPICKVAL(Status,&quot;Solution Provided&quot;)),
AND( 
NOT(CH_IsCompleteTemporarySolution__c),
ISPICKVAL(PRIORVALUE(Status),&quot;Restoration Provided&quot;), 
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;)),
AND( 
NOT(RecordType.Name = &quot;Nokia Incident with Restoration&quot;), 
ISPICKVAL(PRIORVALUE(Status),&quot;Temp Sol. Provided&quot;), 
ISPICKVAL(Status,&quot;Restoration Provided&quot;)),
AND( 
RecordType.Name = &quot;Nokia Incident with Restoration&quot;, 
ISPICKVAL(PRIORVALUE(Status),&quot;Solution Provided&quot;), 
ISPICKVAL(Status,&quot;Responded in Progress&quot;)),
AND( 
NOT(RecordType.Name = &quot;Nokia Incident with Restoration&quot;), 
ISPICKVAL(PRIORVALUE(Status),&quot;Solution Provided&quot;), 
ISPICKVAL(Status,&quot;Restoration Provided&quot;)),
AND( 
NOT(CH_IsCompleteTemporarySolution__c), 
ISPICKVAL(PRIORVALUE(Status),&quot;Solution Provided&quot;), 
ISPICKVAL(Status,&quot;Temp Sol. Provided&quot;))
)</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Incorrect transition of status.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Cancelled_Case_Validation</fullName>
        <active>true</active>
        <description>NOKIASC-15433 Validate case to be updated on Case is Cancelled</description>
        <errorConditionFormula>($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false)&amp;&amp;
CH_RecordTypeCheck__c &amp;&amp;  ISPICKVAL( PRIORVALUE(Status) , &apos;Cancelled&apos;)</errorConditionFormula>
        <errorMessage>cannot edit cancelled case</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CannotCompleteCaseMilestone</fullName>
        <active>true</active>
        <description>Used to restrict users to complete case milestone when case is pending from customer.</description>
        <errorConditionFormula>AND( $Profile.Name &lt;&gt; &quot;Data Loader Profile&quot;,
CH_RecordTypeCheck__c,
ISPICKVAL(Status, &apos;Pending Customer&apos;),
OR(
ISCHANGED(CH_InitialResponse__c),
ISCHANGED(CH_SystemRestored__c),
ISCHANGED(CH_TemporarySolutionProvided__c),
ISCHANGED(CH_ServiceDisruptionReportProvided__c),
ISCHANGED(CH_SolutionProvided__c)
))</errorConditionFormula>
        <errorMessage>Case Milestone can not be completed in Pending from Customer case status.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CannotEditClosedCase</fullName>
        <active>true</active>
        <description>Cannot edit case when status is completed.</description>
        <errorConditionFormula>($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false) &amp;&amp; (
$Profile.Name != &apos;Data Loader Profile&apos; &amp;&amp; CH_RecordTypeCheck__c &amp;&amp; ISPICKVAL( PRIORVALUE(Status) , &apos;Completed&apos;))</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>Cannot edit Completed case.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CannotModifyAfterCaseCreated</fullName>
        <active>false</active>
        <description>Cannot be modified after case is created.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c,
ISCHANGED( CH_ServiceType__c ),
NOT(ISPICKVAL( Status , &apos;Draft&apos;)))</errorConditionFormula>
        <errorDisplayField>CH_ServiceType__c</errorDisplayField>
        <errorMessage>Cannot be modified after case is created</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Cannot_Cancel_Problem</fullName>
        <active>true</active>
        <description>It is not possible to cancel a problem in the stage remedy or close</description>
        <errorConditionFormula>($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false) &amp;&amp; (
(ISPICKVAL(PRIORVALUE( CH_Stage__c ), &apos;Remedy&apos;) ||
ISPICKVAL(PRIORVALUE( CH_Stage__c ), &apos;Close&apos;)) &amp;&amp;
(ISPICKVAL(Status, &apos;Cancelled&apos;)) &amp;&amp;
(RecordType.DeveloperName = &apos;CH_Problem&apos;))</errorConditionFormula>
        <errorMessage>It is not possible to cancel a problem in the stage remedy or close</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CaseMilestoneChronologicalOrderCheck</fullName>
        <active>false</active>
        <description>It is used to check case milestone date/time values are in chronological order.</description>
        <errorConditionFormula>AND(
CH_RecordTypeCheck__c, 
OR(
CH_InitialResponse__c &gt; CH_SystemRestored__c,
CH_InitialResponse__c &gt; CH_TemporarySolutionProvided__c,
CH_InitialResponse__c &gt; CH_ServiceDisruptionReportProvided__c,
CH_InitialResponse__c &gt; CH_SolutionProvided__c,
CH_SystemRestored__c &gt; CH_TemporarySolutionProvided__c,
CH_SystemRestored__c &gt; CH_ServiceDisruptionReportProvided__c,
CH_SystemRestored__c &gt; CH_SolutionProvided__c,
CH_TemporarySolutionProvided__c &gt; CH_ServiceDisruptionReportProvided__c,
CH_TemporarySolutionProvided__c &gt; CH_SolutionProvided__c,
CH_ServiceDisruptionReportProvided__c &gt; CH_SolutionProvided__c
)
)</errorConditionFormula>
        <errorMessage>Case Milestone Date/Time values are not in chronological order. Please provide appropriate values in the &quot;Entitlement Management&quot; section.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CaseStageClosed</fullName>
        <active>true</active>
        <description>Prevent the closure of a Case.</description>
        <errorConditionFormula>AND(CH_Record_Type_Check_Condition__c,
NOT(ISPICKVAL( CH_Stage__c , &apos;Close&apos;)),
ISPICKVAL( Status , &apos;Closed&apos;) 
)</errorConditionFormula>
        <errorDisplayField>CH_Stage__c</errorDisplayField>
        <errorMessage>Case Status can be closed when in the close Stage.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CaseTypeSeverityValidation</fullName>
        <active>true</active>
        <description>Case Type is Information Request OR Severity = Information Request if the Problem field is filled</description>
        <errorConditionFormula>NOT( ISBLANK( CH_Problem__c )) &amp;&amp; ( ISPICKVAL( Severity__c , &apos;Information Request&apos;)) &amp;&amp;  (RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; || RecordType.DeveloperName = &apos;CH_NokiaIncidentWithRestoration&apos;)</errorConditionFormula>
        <errorMessage>You cannot update Severity/case Type to Information Request when there is a Problem related to the Incident</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Category_is_a_required_field</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
OR(
ISPICKVAL(Type,&quot;CH or HWS Issue&quot;),
ISPICKVAL(Type,&quot;sCRM Problem&quot;),
ISPICKVAL(Type,&quot;CPQ Related&quot;),
ISPICKVAL(Type,&quot;PRM Related&quot;)
),

RecordType.Name = &apos;SF Support&apos;,
ISPICKVAL(Category__c, &quot;&quot;)
)</errorConditionFormula>
        <errorMessage>Please select appropriate &apos;Category&apos; field if you pick the Type as &apos;CH or HWS Issue&apos; or CRM Problem or CPQ Related or PRM Related</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CheckFinalODRCoverage</fullName>
        <active>true</active>
        <description>Checks if ODR coverage was set up correctly without gaps and over the total duration</description>
        <errorConditionFormula>($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false) &amp;&amp; ISPICKVAL(CH_Stage__c, &apos;Close&apos;) &amp;&amp; !CH_OutageDurationCompletelyCovered__c &amp;&amp; ISPICKVAL(CH_AssessedOutage__c , &apos;Yes&apos;) &amp;&amp; CH_RecordTypeDevName__c = &apos;CH_NokiaIncidentWithRestoration&apos;</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>There is something wrong with your ODR coverage: Either you did not cover the full duration or there are gaps between your ODRs</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CheckOutageDurationCoverage</fullName>
        <active>true</active>
        <description>Checks if the sum of distinct ODRs and total outage duration on Case are equal</description>
        <errorConditionFormula>AND(OR(ISCHANGED( CH_OutageEndDate__c), ISCHANGED(CH_OutageStartDate__c)), PRIORVALUE(Outage_Duration_Check__c) != 0,  FLOOR(Outage_Duration_Check__c) !=  FLOOR(CH_TotalOutageDuration__c),
ISPICKVAL( CH_Stage__c , &apos;Close&apos;))</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>Total Outage duration on Case must equal outage duration coverage by distinct Outage Duration Records</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CheckStatusPriorValue</fullName>
        <active>true</active>
        <description>To check for status prior value &lt;&gt; null when status = pending customer</description>
        <errorConditionFormula>ISPICKVAL(Status, &apos;Pending Customer&apos;) &amp;&amp;  ISBLANK(CH_Status_PriorValue__c) &amp;&amp;
OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; , 
RecordType.DeveloperName =&apos;CH_NokiaIncidentWithRestoration&apos;, 
RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;)</errorConditionFormula>
        <errorMessage>Cannot change status to Pending Customer as Status Prior Value is blank.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Check_Asset_has_Entitlement</fullName>
        <active>true</active>
        <description>Check that if an asset is selected, that an entitlement must also be selected
TSALEM: US NOKIASC-494</description>
        <errorConditionFormula>AND ( 
NOT(ISBLANK (AssetId)), 
ISBLANK( EntitlementId ), 
HWS_RecordTypeCheck__c=false 
)</errorConditionFormula>
        <errorMessage>An Entitlement must be selected</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ClassifyCaseAsDefectOrOther</fullName>
        <active>false</active>
        <errorConditionFormula>AND( 
OR( 
$RecordType.Name= &quot;Nokia Standard Case&quot;, 
$RecordType.Name=&quot;Nokia Incident with Restoration&quot; 
), 
TODAY() &gt; DATEVALUE(CreatedDate) +30)</errorConditionFormula>
        <errorMessage>You are not allowed to set the &quot;Suspected Defect Flag&quot; on cases that are older then 30 days</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_CollectP20OrderDetailRule</fullName>
        <active>false</active>
        <description>Fields can only be populated when Service Contract linked to entitlement record does not have CARES Service Agreement populated AND CDB Contract Number is populated AND Service Type = Internal Support.</description>
        <errorConditionFormula>AND(
 CH_RecordTypeCheck__c,
 OR(  
  NOT(ISBLANK(CH_PlantCode__c)),
  NOT(ISBLANK(CH_LocalServiceOrder__c)),
  NOT(ISBLANK(CH_GlobalServiceOrder__c))
 ),
 NOT(
  AND(
    ISPICKVAL(CH_ServiceType__c, &apos;Internal Support&apos;),
    ISBLANK(Entitlement.ServiceContract.CH_CARES_ServiceAgreement__c),
    NOT(ISBLANK(Entitlement.ServiceContract.CH_CDB_ContractNumber__c))
 ))
)</errorConditionFormula>
        <errorMessage>Local Service Order, Global Service Order and Plant Code cannot be specified on this case.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralApproveDateLaterThanIR</fullName>
        <active>true</active>
        <description>Rule 1 of Deferral Validation Rules. NOKIASC-20302</description>
        <errorConditionFormula>CH_InitialResponse__c &gt;= CH_DeferralApprovedDate__c</errorConditionFormula>
        <errorMessage>Deferral Approved Date must be later than the Initial Response Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralApprovedDateNotInFuture</fullName>
        <active>true</active>
        <description>2. Deferral Approved Date must not be in the future.
Rule 2 in US 20302.</description>
        <errorConditionFormula>CH_DeferralApprovedDate__c &gt; NOW()</errorConditionFormula>
        <errorMessage>Deferral Approved Date cannot be in the future.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralLegacyTicketDeferralStatusNA</fullName>
        <active>true</active>
        <description>If Legacy Ticket Number is populated and Deferral Status is not equal to &quot;Not Applicable&quot;, display error message.</description>
        <errorConditionFormula>NOT(ISPICKVAL(CH_DeferralStatus__c, &quot;Not Applicable&quot;))
&amp;&amp;
NOT(ISBLANK(CH_LegacyCaseNumber__c ))</errorConditionFormula>
        <errorMessage>Deferrals are not allowed on converted legacy cases. Deferral Status must be Not Applicable on this case.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralLegacyTicketDetails</fullName>
        <active>true</active>
        <description>If Legacy Ticket Number is populated and (Deferral Approved Date OR Deferred Solution Provided Target Date OR Deferral Details are populated) display error message.</description>
        <errorConditionFormula>AND(
	NOT(ISBLANK( CH_LegacyCaseNumber__c )),
		OR(
			NOT(ISNULL( CH_DeferralApprovedDate__c )),
			NOT(ISNULL( CH_DeferredSolutionProvidedTarget__c )),
			LEN( CH_DeferralDetails__c ) &gt; 0
		)
)</errorConditionFormula>
        <errorMessage>Deferrals are not allowed on converted legacy cases. Deferral Approved Date, Deferred Solution Provided Target Date and Deferral Details must all be left blank.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralNokiaRestorationCaseCheck</fullName>
        <active>true</active>
        <description>The status of the Case needs to be Restoration Provided or Temporary Solution Provided status in order to activate Deferral.</description>
        <errorConditionFormula>AND(
OR(
ISCHANGED(CH_DeferralStatus__c),
ISPICKVAL(PRIORVALUE(CH_DeferralStatus__c),&quot;&quot;) 
),
RecordType.DeveloperName = &apos;CH_NokiaIncidentWithRestoration&apos;,
ISPICKVAL( CH_DeferralStatus__c , &quot;Active&quot;), 
NOT(ISPICKVAL( Status , &quot;Restoration Provided&quot;)), 
NOT(ISPICKVAL( Status , &quot;Temp Sol. Provided&quot;)) 
)</errorConditionFormula>
        <errorMessage>Deferral Status can only be updated to Active when the case Status is &quot;Restoration Provided&quot; or &quot;Temporary Solution Provided&quot;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralNokiaStandardCaseCheck</fullName>
        <active>true</active>
        <description>The status of the Case needs to be Responded In Progress or Temporary Solution Provided status in order to activate Deferral.</description>
        <errorConditionFormula>AND(
OR(
ISCHANGED(CH_DeferralStatus__c),
ISPICKVAL(PRIORVALUE(CH_DeferralStatus__c),&quot;&quot;) 
),
RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos;,
ISPICKVAL( CH_DeferralStatus__c , &quot;Active&quot;), 
NOT(ISPICKVAL( Status , &quot;Responded in Progress&quot;)),
NOT(ISPICKVAL( Status , &quot;Temp Sol. Provided&quot;))
)</errorConditionFormula>
        <errorMessage>Deferral Status can only be updated to Active when the case Status is &quot;Responded In Progress&quot; or &quot;Temporary Solution Provided&quot;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralSolTarDateLaterDefApproveDate</fullName>
        <active>true</active>
        <description>Deferred Solution Provided Target Date must be later than the Deferral Approved Date
Validation Rule 3. US NOKIASC-20302.</description>
        <errorConditionFormula>CH_DeferralApprovedDate__c &gt;=  CH_DeferredSolutionProvidedTarget__c</errorConditionFormula>
        <errorMessage>Deferred Solution Provided Target Date must be later that the Deferral Approved Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralSolutionDefectMilestoneCheck</fullName>
        <active>true</active>
        <description>US: 20567 If user attempts to update the Deferral Status from any value to new value of Proposed/Approved/Active and Is Solution Provided SLA and Defect is not set.
Note: Allows for US 20307</description>
        <errorConditionFormula>AND( 
CH_RecordTypeCheck__c, 
ISCHANGED(CH_DeferralStatus__c), 
OR( 
IF( 
ISPICKVAL(PRIORVALUE(CH_DeferralStatus__c), &apos;Active&apos;) 
&amp;&amp; 
ISCHANGED(CH_Defect__c), 
OR( 
ISPICKVAL(CH_DeferralStatus__c, &apos;Proposed&apos;), 
ISPICKVAL(CH_DeferralStatus__c, &apos;Approved&apos;), 
ISPICKVAL(CH_DeferralStatus__c, &apos;Active&apos;) 
), 
FALSE 
), 
IF( 
OR( 
ISPICKVAL(CH_DeferralStatus__c, &apos;Proposed&apos;), 
ISPICKVAL(CH_DeferralStatus__c, &apos;Approved&apos;), 
ISPICKVAL(CH_DeferralStatus__c, &apos;Active&apos;) 
), 
OR( 
CH_Defect__c = FALSE, 
CH_IsSolutionProvidedSLA__c = FALSE 
), 
FALSE) 
) 
)</errorConditionFormula>
        <errorMessage>Deferrals can only be performed on cases that have Solution Provided (defect) milestone running.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_DeferralStatusIsGoingToBlank</fullName>
        <active>true</active>
        <description>Do not let user clear the Deferral Status field once it is populated. (US 20569)</description>
        <errorConditionFormula>ISBLANK(TEXT(CH_DeferralStatus__c)) &amp;&amp;
 ISCHANGED(CH_DeferralStatus__c)</errorConditionFormula>
        <errorMessage>Deferral Status field must be populated</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Deferral_Approval_Date_must_be_filled</fullName>
        <active>true</active>
        <description>Requires Deferral Approved Date to be filled when Deferral Status is Approved or Active.
Rule 9 in US 20568.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
ISBLANK( CH_DeferralApprovedDate__c ), 
OR(ISPICKVAL( CH_DeferralStatus__c ,&apos;Approved&apos;), 
ISPICKVAL( CH_DeferralStatus__c ,&apos;Active&apos;)) 
)</errorConditionFormula>
        <errorMessage>Deferral Approved Date must be populated when Deferral Status is Approved or Active.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Deferral_Block_Date_Update_Active</fullName>
        <active>true</active>
        <description>Blocking changes to Deferred Solution Provided Target Date field when Deferral Status is &quot;Active&quot;.
US-20306</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
ISCHANGED(CH_DeferredSolutionProvidedTarget__c), 
ISPICKVAL(PRIORVALUE
(CH_DeferralStatus__c), &apos;Active&apos;))</errorConditionFormula>
        <errorMessage>Deferred Solution Provided Target Date cannot be modified when Deferral Status is Active.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Deferral_Details_Must_be_filled</fullName>
        <active>true</active>
        <description>Requires Deferral Details to be filled when Deferral Status is Proposed, Approved or Active.
Rule 7 in US 20568.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
ISBLANK(CH_DeferralDetails__c ),  
OR(ISPICKVAL( CH_DeferralStatus__c ,&apos;Proposed&apos;),
ISPICKVAL( CH_DeferralStatus__c ,&apos;Approved&apos;),
ISPICKVAL( CH_DeferralStatus__c ,&apos;Active&apos;))
)</errorConditionFormula>
        <errorMessage>Deferral Details must be populated when Deferral Status is Proposed, Approved or Active.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Deferral_Solution_T_Date_must_filled</fullName>
        <active>true</active>
        <description>Requires Deferred Solution Provided Target Date is filled when Deferral Status is Proposed, Approved or Active.
Rule 8 in US 20568.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
ISBLANK( CH_DeferredSolutionProvidedTarget__c ), 
OR(ISPICKVAL( CH_DeferralStatus__c ,&apos;Proposed&apos;), 
ISPICKVAL( CH_DeferralStatus__c ,&apos;Approved&apos;), 
ISPICKVAL( CH_DeferralStatus__c ,&apos;Active&apos;)) 
)</errorConditionFormula>
        <errorMessage>Deferred Solution Provided Target Date must be populated when Deferral Status is Proposed, Approved or Active.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Delete_all_but_one_ODR</fullName>
        <active>true</active>
        <description>Prevents the user from deleting the last ODR</description>
        <errorConditionFormula>AND(ISCHANGED( CH_Out__c ), PRIORVALUE(CH_Out__c) &gt;= 1, CH_Out__c &lt; 1)</errorConditionFormula>
        <errorMessage>You tried to delete the only ODR record which currently exists for this outage. This is not allowed, you can either edit the ODR to change the required fields or create a new one with the correct data and then do the delete.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_InactiveMilestoneDateValidationRule</fullName>
        <active>false</active>
        <description>Milestone dates to be updated when the respective check box is checked.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
OR( 
AND(NOT(CH_IsInitialResponseSLA__c), NOT(ISBLANK(CH_InitialResponse__c))), 
AND(NOT(CH_IsSystemRestoredSLA__c), NOT(ISBLANK(CH_SystemRestored__c))), 
AND(NOT(CH_IsTemporarySolutionProvidedSLA__c), NOT(ISBLANK(CH_TemporarySolutionProvided__c))), 
AND(NOT(CH_IsServiceDisruptionReportSLA__c), NOT(ISBLANK(CH_ServiceDisruptionReportProvided__c))), 
AND(NOT(CH_IsSolutionProvidedSLA__c), NOT(ISBLANK(CH_SolutionProvided__c))) 
))</errorConditionFormula>
        <errorMessage>In-active milestone fields can not be edited.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_InitialResponseDate</fullName>
        <active>true</active>
        <description>&quot;Initial Response Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Initial Response.&quot;</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
NOT(CH_IsCompleteInitialResponse__c), 
NOT(ISNULL(CH_InitialResponse__c)))</errorConditionFormula>
        <errorDisplayField>CH_InitialResponse__c</errorDisplayField>
        <errorMessage>&quot;Initial Response Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Initial Response.&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_InitialResponseDate2</fullName>
        <active>true</active>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_InitialResponse__c )), 
NOT(ISNULL(CH_TemporarySolutionProvided__c)), 
CH_InitialResponse__c  &gt; CH_TemporarySolutionProvided__c,
ISBLANK( CH_RestorationMethod__c  ))</errorConditionFormula>
        <errorMessage>Initial Response Date should be less than or equal to Temporary Solution Provided Date when there is no &apos;Restoration Method&apos;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_LimitForProductFields</fullName>
        <active>true</active>
        <description>&apos;Asset&apos;, &apos;Product&apos;, &apos;Solution&apos;, &apos;Product Variant&apos; and &apos;Product Release&apos; cannot be modified if one of the following event is Completed.(&apos;Restore&apos;, &apos;Service Disruption Provided&apos;, &apos;Temporary Solution Provided&apos;, &apos;Solution Provided&apos;)</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
CH_LegacyCaseNumber__c=null,
OR(
ISCHANGED(AssetId), 
ISCHANGED(ProductId),
ISCHANGED( CH_Solution__c ),
ISCHANGED(CH_ProductVariant__c),
ISCHANGED( CH_Product_Release__c )
), 
OR(
CH_IsCompleteRestore__c , 
CH_IsCompleteServiceDisruptionReport__c , 
CH_IsCompleteTemporarySolution__c , 
CH_IsCompleteSolutionProvided__c
) 
)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>&apos;Asset&apos;, &apos;Product&apos;, &apos;Solution&apos;, &apos;Product Variant&apos; and &apos;Product Release&apos; cannot be modified if one of the following event is Completed.(&apos;Restore&apos;, &apos;Service Disruption Provided&apos;, &apos;Temporary Solution Provided&apos;, &apos;Solution Provided&apos;)</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_LimitForProductFields_LegacyCases</fullName>
        <active>true</active>
        <description>Created as part of Issue NOKIASC-25597</description>
        <errorConditionFormula>AND( $Profile.Name &lt;&gt; &quot;Data Loader Profile&quot;,
CH_RecordTypeCheck__c ,
CH_LegacyCaseNumber__c!=null,
OR(
ISCHANGED(AssetId),
AND(NOT(ISBLANK(PRIORVALUE(ProductId))),ISCHANGED(ProductId)),
AND(NOT(ISBLANK(PRIORVALUE(CH_Solution__c))),ISCHANGED( CH_Solution__c )),
AND(NOT(ISBLANK(PRIORVALUE(CH_Product_Release__c))), ISCHANGED( CH_Product_Release__c ))
),
OR(
CH_IsCompleteRestore__c ,
CH_IsCompleteServiceDisruptionReport__c ,
CH_IsCompleteTemporarySolution__c ,
CH_IsCompleteSolutionProvided__c
)
)</errorConditionFormula>
        <errorMessage>&apos;Asset&apos;, &apos;Product&apos;, &apos;Solution&apos; and &apos;Product Release&apos; cannot be modified if one of the following event is Completed.(&apos;Restore&apos;, &apos;Service Disruption Provided&apos;, &apos;Temporary Solution Provided&apos;, &apos;Solution Provided&apos;)</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Link_Btw_Ticket_Origin_and_CaseOrigin</fullName>
        <active>true</active>
        <errorConditionFormula>OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; ,
RecordType.DeveloperName = &apos;CH_NokiaIncidentWithRestoration&apos;,
RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;)
&amp;&amp; (ISPICKVAL(Origin , &apos;S2S&apos;) &amp;&amp;
ISBLANK( TEXT(CH_CaseOriginSystem__c ))) &amp;&amp; IsClosed = false</errorConditionFormula>
        <errorDisplayField>CH_CaseOriginSystem__c</errorDisplayField>
        <errorMessage>Please Select Case Origin System</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ModifiedWhenStatusDraft</fullName>
        <active>false</active>
        <description>Can only be modified on existing case when status of case is Draft.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISPICKVAL(Status , &apos;Draft&apos;)),
ISCHANGED(  AccountId ))</errorConditionFormula>
        <errorDisplayField>AccountId</errorDisplayField>
        <errorMessage>Can be modified when status of case is Draft</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ModifyDependingOnMilestones</fullName>
        <active>true</active>
        <description>Limit when Entitlement and Asset can be modified.</description>
        <errorConditionFormula>AND($Profile.Name &lt;&gt; &quot;Data Loader Profile&quot;,CH_RecordTypeCheck__c ,
OR(  
ISCHANGED(EntitlementId),
ISCHANGED(AssetId)),                
OR(CH_IsCompleteRestore__c ,
CH_IsCompleteServiceDisruptionReport__c ,
CH_IsCompleteTemporarySolution__c ,
CH_IsCompleteSolutionProvided__c)
)</errorConditionFormula>
        <errorMessage>&apos;Entitlement&apos; and &apos;Asset&apos; cannot be modified if one of the following event is Completed.(&apos;Restore&apos;, &apos;Service Disruption Provided&apos;, &apos;Temporary Solution Provided&apos;, &apos;Solution Provided&apos;)</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ModifyDependingOnStatus</fullName>
        <active>false</active>
        <description>Outage flag can only be modified before the ticket is in status &quot;Responded in Progress&quot;.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
ISCHANGED(CH_Outage__c), 
NOT(ISPICKVAL(Status , &apos;Created&apos;)), 
NOT(ISPICKVAL(Status , &apos;Draft&apos;)), 
NOT(ISPICKVAL(Status , &apos;Assigned&apos;)), 
NOT((NOT(ISPICKVAL(PRIORVALUE(Status), &apos;Responded in Progress&apos;)) &amp;&amp; ISPICKVAL(Status,&apos;Responded in Progress&apos;))))</errorConditionFormula>
        <errorDisplayField>CH_Outage__c</errorDisplayField>
        <errorMessage>Outage flag can only be modified prior to or at the same time the case is moving to the Status &quot;Responded In Progress&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_OpenChildCase</fullName>
        <active>false</active>
        <description>The case cannot be closed If there is an open child case linked to the case</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISBLANK( CH_Problem__c )),
NOT(ISPICKVAL(CH_Problem__r.Status, &apos;Closed&apos;)),
ISPICKVAL( Status , &apos;Closed&apos;)
)</errorConditionFormula>
        <errorDisplayField>CH_Problem__c</errorDisplayField>
        <errorMessage>Case cannot be closed if there is an open child case linked to the case.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_OutageHandlingMandatoryOnStatusClosed</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
	OR($RecordType.Name = &apos;Nokia Incident with Restoration&apos;, $RecordType.Name = &apos;Nokia Standard Case&apos;),
	ISPICKVAL( CH_AssessedOutage__c , &apos;Yes&apos;),
        NOT(ISPICKVAL(PRIORVALUE(Status), &apos;Closed&apos;)), 
	ISPICKVAL(Status , &apos;Closed&apos;),
	ISPICKVAL(CH_NoneAlarmedOutage__c, &apos;&apos;),
	ISPICKVAL(CH_OutageContext__c, &apos;&apos;),
	ISPICKVAL(CH_RestoreAction__c, &apos;&apos;),
	ISPICKVAL(CH_PrimaryCause__c, &apos;&apos;),
	ISPICKVAL(CH_SecondaryCause__c, &apos;&apos;),
	ISPICKVAL(Outage_Triggered_by__c, &apos;&apos;)
)</errorConditionFormula>
        <errorMessage>You cannot close this support ticket with outage reported or assessed if following fields are not populated: None Alarmed Outage, Outage Context, Restore Action, Primary Cause, Secondary Cause and Outage Triggered by.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_OutageOnMajorCriticalSeverity</fullName>
        <active>true</active>
        <description>Outage can only be set as Yes,No when Sverity is Major or Critical</description>
        <errorConditionFormula>(OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; ,
RecordType.DeveloperName = &apos;CH_NokiaIncidentWithRestoration&apos;,
RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;)) &amp;&amp;
((ISPICKVAL( Severity__c , &apos;Critical&apos;) ||  ISPICKVAL(Severity__c , &apos;Major&apos;)) &amp;&amp;  NOT( ISPICKVAL( CH_Outage__c , &apos;Yes&apos;)|| ISPICKVAL( CH_Outage__c , &apos;No&apos;) ))</errorConditionFormula>
        <errorDisplayField>CH_Outage__c</errorDisplayField>
        <errorMessage>Outage cannot be set to blank when severity is Major or Critical</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_OutageStartDate</fullName>
        <active>true</active>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
NOT(ISNULL(PRIORVALUE(CH_OutageStartDate__c))),
ISBLANK(CH_OutageStartDate__c), 
NOT(ISPICKVAL(Status , &quot;Cancelled&quot;)),
ISPICKVAL(CH_Outage__c , &quot;Yes&quot;))</errorConditionFormula>
        <errorDisplayField>CH_OutageStartDate__c</errorDisplayField>
        <errorMessage>Cannot clear the value if Outage is Yes unless Status is Cancelled.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_OutageTypeNeedsToBePopulatedIfOutage</fullName>
        <active>true</active>
        <description>When Outage is selected at assess stage, Outage Type cannot be empty or &quot;None&quot;</description>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),
AND(ISBLANK(TEXT( CH_OutageType__c )), ISPICKVAL(CH_Outage__c, &apos;Yes&apos;), CH_RecordTypeDevName__c &lt;&gt; &apos;CH_Problem&apos;, OR(ISPICKVAL(CH_Stage__c, &apos;Investigate &amp; Restore&apos;), ISPICKVAL(CH_Stage__c, &apos;Diagnosis &amp; Technical Analysis&apos;), ISPICKVAL(CH_Stage__c, &apos;Resolve&apos;), ISPICKVAL(CH_Stage__c, &apos;Detect&apos;), ISPICKVAL(CH_Stage__c, &apos;Neutralize&apos;), ISPICKVAL(CH_Stage__c, &apos;Correct&apos;), ISPICKVAL(CH_Stage__c, &apos;Prevent&apos;), ISPICKVAL(CH_Stage__c, &apos;Report&apos;), ISPICKVAL(CH_Stage__c, &apos;Review&apos;), ISPICKVAL(CH_Stage__c, &apos;Remedy&apos;), ISPICKVAL(CH_Stage__c, &apos;Close&apos;))))</errorConditionFormula>
        <errorMessage>Outage Type cannot be empty, if Case is an Outage</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Outage_Check_is_not_blank</fullName>
        <active>true</active>
        <description>TSALEM: Ensure that Severity is captured on Case Handling type Cases</description>
        <errorConditionFormula>AND
( 
  OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; , 
  RecordType.DeveloperName = &apos;CH_NokiaIncidentWithRestoration&apos;, 
  RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;), 
  ISBLANK(TEXT( CH_Outage__c ))
)</errorConditionFormula>
        <errorDisplayField>CH_Outage__c</errorDisplayField>
        <errorMessage>Outage must be entered</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime1</fullName>
        <active>true</active>
        <description>Issue Occurrence Date should be less than or equal to Outage Start Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_IssueOccurenceDate__c )), 
NOT(ISNULL(CH_OutageStartDate__c)), 
CH_IssueOccurenceDate__c &gt;  CH_OutageStartDate__c
)</errorConditionFormula>
        <errorMessage>Issue Occurrence Date should be less than or equal to Outage Start Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime2</fullName>
        <active>true</active>
        <description>Temporary Solution Provided Date should be less than or equal to Solution Provided Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_TemporarySolutionProvided__c  )), 
NOT(ISNULL(CH_SolutionProvided__c)), 
CH_TemporarySolutionProvided__c  &gt; CH_SolutionProvided__c)</errorConditionFormula>
        <errorDisplayField>CH_TemporarySolutionProvided__c</errorDisplayField>
        <errorMessage>Temporary Solution Provided Date should be less than or equal to Solution Provided Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime3</fullName>
        <active>true</active>
        <description>Reported Date should be less than or equal to Date/Time Opened(Created Date).</description>
        <errorConditionFormula>AND( OR(CH_RecordTypeCheck__c, HWS_RecordTypeCheck__c),NOT(ISNULL(CH_ReportedDate__c)), NOT(ISNULL(CreatedDate)), CH_ReportedDate__c &gt; CreatedDate)</errorConditionFormula>
        <errorDisplayField>CH_ReportedDate__c</errorDisplayField>
        <errorMessage>Reported Date should be less than or equal to Date/Time Opened(Created Date).</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime4</fullName>
        <active>true</active>
        <description>Assigned Date should be greater than or equal to Milestone Start Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_AssignedDate__c  )), 
NOT(ISNULL(CH_MilestoneSLA_Start__c )), 
CH_AssignedDate__c  &lt; CH_MilestoneSLA_Start__c 
)</errorConditionFormula>
        <errorDisplayField>CH_AssignedDate__c</errorDisplayField>
        <errorMessage>Assigned Date should be greater than or equal to Milestone Start Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime5</fullName>
        <active>true</active>
        <description>Restored Date should be less than or equal to Service Disruption Report Provided Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c,
NOT(ISNULL(CH_SystemRestored__c )), 
NOT(ISNULL(CH_ServiceDisruptionReportProvided__c)), 
CH_SystemRestored__c &gt;  CH_ServiceDisruptionReportProvided__c)</errorConditionFormula>
        <errorDisplayField>CH_SystemRestored__c</errorDisplayField>
        <errorMessage>Restored Date should be less than or equal to Service Disruption Report Provided Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime6</fullName>
        <active>true</active>
        <description>Initial Response Date should be less than or equal to Restored Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_InitialResponse__c  )), 
NOT(ISNULL(CH_SystemRestored__c)), 
CH_InitialResponse__c  &gt; CH_SystemRestored__c)</errorConditionFormula>
        <errorDisplayField>CH_InitialResponse__c</errorDisplayField>
        <errorMessage>Initial Response Date should be less than or equal to Restored Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime7</fullName>
        <active>true</active>
        <description>Outage End Date should be greater than Outage Start Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_OutageEndDate__c)), 
NOT(ISNULL(CH_OutageStartDate__c)), 
CH_OutageEndDate__c &lt;= CH_OutageStartDate__c
)</errorConditionFormula>
        <errorDisplayField>CH_OutageEndDate__c</errorDisplayField>
        <errorMessage>Outage End Date should be greater than Outage Start Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime8</fullName>
        <active>true</active>
        <description>Outage End Date should be less than or equal to Restored Date.</description>
        <errorConditionFormula>AND( CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_OutageEndDate__c )), 
NOT(ISNULL(CH_SystemRestored__c)), 
CH_OutageEndDate__c &gt; CH_SystemRestored__c)</errorConditionFormula>
        <errorDisplayField>CH_OutageEndDate__c</errorDisplayField>
        <errorMessage>Outage End Date should be less than or equal to Restored Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PopulateDateTime9</fullName>
        <active>true</active>
        <description>Assigned Date should be less than or equal to Initial Response Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c ,
NOT(ISNULL(CH_AssignedDate__c)), 
NOT(ISNULL(CH_InitialResponse__c)), 
CH_AssignedDate__c   &gt; CH_InitialResponse__c)</errorConditionFormula>
        <errorDisplayField>CH_AssignedDate__c</errorDisplayField>
        <errorMessage>Assigned Date should be less than or equal to Initial Response Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Portal_Severity</fullName>
        <active>true</active>
        <description>Customer portal validation rule: Severity Critical is not supported in R1</description>
        <errorConditionFormula>AND
(ISPICKVAL(Severity__c,&quot;Critical&quot;),
ISPICKVAL($Profile.UserType,&quot;PowerCustomerSuccess&quot;), ISNEW() )</errorConditionFormula>
        <errorDisplayField>Severity__c</errorDisplayField>
        <errorMessage>Please call Nokia for support tickets with outage or severity is critical. Currently this is not supported in the portal.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PreventChangesToClosedProblems</fullName>
        <active>true</active>
        <description>Prevent any updates to fields on closed Problems.</description>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),
AND(
NOT(ISNULL(ClosedDate)),
NOT(ISPICKVAL(PRIORVALUE(Status),&quot;Closed&quot;)),
NOT(ISPICKVAL(PRIORVALUE(Status),&quot;Cancelled&quot;)),
RecordType.DeveloperName = &quot;CH_Problem&quot;
))</errorConditionFormula>
        <errorMessage>You cannot edit any fields on a Closed or Cancelled Problem.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_PreventUserToSaveAsDraft</fullName>
        <active>true</active>
        <description>Prevent user to Save case as Draft once it is in any other status</description>
        <errorConditionFormula>CH_RecordTypeCheck__c &amp;&amp; NOT(ISPICKVAL( PRIORVALUE( Status ) , &apos;Draft&apos;)) &amp;&amp; ISCHANGED( Status ) &amp;&amp;  TEXT( Status ) = &apos;Draft&apos;</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>You are not allowed to save case in status Draft after it has been saved in another status.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Prevent_Clearing_of_Contact_Name</fullName>
        <active>true</active>
        <description>Check to prevent the Contact Name being cleared and saved as a blank value.</description>
        <errorConditionFormula>AND( 
CH_RecordTypeCheck__c, 
RecordType.DeveloperName &lt;&gt; &quot;CH_Problem&quot;, 
ContactId = NULL, 
NOT(ISPICKVAL($User.UserType, &quot;PowerCustomerSuccess&quot;)) 
)</errorConditionFormula>
        <errorDisplayField>ContactId</errorDisplayField>
        <errorMessage>Contact Name cannot be blank.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ProblemStatementMandatory</fullName>
        <active>false</active>
        <errorConditionFormula>AND(  
OR( 
$RecordType.Name= &quot;Problem&quot;,
$RecordType.Name= &quot;Nokia Incident with Restoration&quot;,
$RecordType.Name= &quot;Nokia Standard Case&quot;,
$RecordType.Name= &quot;Nokia Information Request&quot;
),
ISBLANK(CH_ProblemStatement__c),
OR(AND(ISPICKVAL( PRIORVALUE(CH_Stage__c),&quot;Register&quot;),OR(ISPICKVAL(CH_Stage__c,&quot;Route&quot;),ISPICKVAL(CH_Stage__c,&quot;Assess &amp; Respond&quot;),ISPICKVAL(CH_Stage__c,&quot;Investigate &amp; Restore&quot;),ISPICKVAL(CH_Stage__c,&quot;Diagnosis &amp; Technical Analysis&quot;),ISPICKVAL(CH_Stage__c,&quot;Resolve&quot;),ISPICKVAL(CH_Stage__c,&quot;Close&quot;))),
AND(ISPICKVAL( PRIORVALUE(CH_Stage__c),&quot;Route&quot;),OR(ISPICKVAL(CH_Stage__c,&quot;Assess &amp; Respond&quot;),ISPICKVAL(CH_Stage__c,&quot;Investigate &amp; Restore&quot;),ISPICKVAL(CH_Stage__c,&quot;Diagnosis &amp; Technical Analysis&quot;),ISPICKVAL(CH_Stage__c,&quot;Resolve&quot;),ISPICKVAL(CH_Stage__c,&quot;Close&quot;))),
AND(ISPICKVAL( PRIORVALUE(CH_Stage__c),&quot;Assess &amp; Respond&quot;),OR(ISPICKVAL(CH_Stage__c,&quot;Investigate &amp; Restore&quot;),ISPICKVAL(CH_Stage__c,&quot;Diagnosis &amp; Technical Analysis&quot;),ISPICKVAL(CH_Stage__c,&quot;Resolve&quot;),ISPICKVAL(CH_Stage__c,&quot;Close&quot;))),
AND(ISPICKVAL( PRIORVALUE(CH_Stage__c),&quot;Investigate &amp; Restore&quot;),OR(ISPICKVAL(CH_Stage__c,&quot;Diagnosis &amp; Technical Analysis&quot;),ISPICKVAL(CH_Stage__c,&quot;Resolve&quot;),ISPICKVAL(CH_Stage__c,&quot;Close&quot;))),
AND(ISPICKVAL( PRIORVALUE(CH_Stage__c),&quot;Diagnosis &amp; Technical Analysis&quot;),OR(ISPICKVAL(CH_Stage__c,&quot;Resolve&quot;),ISPICKVAL(CH_Stage__c,&quot;Close&quot;))),
AND(ISPICKVAL( PRIORVALUE(CH_Stage__c),&quot;Resolve&quot;),ISPICKVAL(CH_Stage__c,&quot;Close&quot;))))</errorConditionFormula>
        <errorMessage>Cannot modify stage when problem statement is blank.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ProntoTargetDateField_Validation</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
				$Profile.Name != &apos;System Administrator&apos;,
    $Profile.Name != &apos;Integration API Only Profile&apos;,
    ISPICKVAL(CH_RDInterface__c, &apos;PRONTO&apos; ),
   ISCHANGED(CH_Target_Release_Date__c)
)</errorConditionFormula>
        <errorDisplayField>CH_Target_Release_Date__c</errorDisplayField>
        <errorMessage>Target Release Date Cannot be Modified for PRONTO Interface</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ProntoTargetFieldUpdate_Validation</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
				$Profile.Name != &apos;System Administrator&apos;,
    $Profile.Name != &apos;Integration API Only Profile&apos;,
    ISPICKVAL(CH_RDInterface__c, &apos;PRONTO&apos; ),
     		ISCHANGED( CH_Target_Release__c)
)</errorConditionFormula>
        <errorDisplayField>CH_Target_Release__c</errorDisplayField>
        <errorMessage>Target Release  Cannot be Modified for PRONTO Interface</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Read_Only_On_RnDReference</fullName>
        <active>true</active>
        <description>Once there is a update from PRONTO or JIRA on R&amp;D Reference field, the field will be made as read only</description>
        <errorConditionFormula>AND( CH_R_D_Flag__c  = True, ISCHANGED( CH_CRNumber__c ) )</errorConditionFormula>
        <errorMessage>You Cannot edit the R&amp;D Reference</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ReopenCancelledProblem</fullName>
        <active>true</active>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),
AND(
RecordType.DeveloperName = &apos;CH_Problem&apos;,ISPICKVAL(PRIORVALUE(Status), &apos;Cancelled&apos;),
OR(
ISCHANGED(Status),
ISCHANGED(OwnerId),
ISCHANGED(AccountId),
ISCHANGED(ProductId),
ISCHANGED(EntitlementId),
ISCHANGED(Description),
ISCHANGED(Subject)
)
)
)</errorConditionFormula>
        <errorMessage>It is not possible to reopen a Problem once it&apos;s been cancelled.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ReopenClosedProblem</fullName>
        <active>true</active>
        <description>Last Modified by - Tushar Goyal - NOKIASC - 22311</description>
        <errorConditionFormula>AND(
RecordType.DeveloperName = &apos;CH_Problem&apos;,ISPICKVAL(PRIORVALUE(Status), &apos;Closed&apos;),
OR(
ISCHANGED(Status),
ISCHANGED(ParentId), ISCHANGED(CH_RelatedCasesReferenceNumber__c) , ISCHANGED(OwnerId), ISCHANGED(Severity__c),
ISCHANGED(Comment__c),
ISCHANGED(CH_OutageCauseValidated__c),
ISCHANGED(CH_IsCompleteSetIssueResolved__c), ISCHANGED(Subject),
ISCHANGED(CH_CustomerDescription__c),
ISCHANGED(CH_ProblemStatement__c),
ISCHANGED(CH_SummaryofAnalysis__c),
ISCHANGED(CH_ActionTaken__c),
ISCHANGED(CH_PreventiveActions__c),
ISCHANGED(CH_CorrectiveActions__c),
ISCHANGED(CH_CauseoftheIncident__c),
ISCHANGED(CH_ListofContributingCauses__c),
ISCHANGED(CH_ValidationofRootCause__c),
ISCHANGED(CH_AssessedOutage__c),
ISCHANGED(CH_Defect__c),
ISCHANGED(Priority),
ISCHANGED(CH_Product_Name__c),
ISCHANGED(CH_Product_Release__c),
ISCHANGED(CH_Product_Module__c),
ISCHANGED(CH_ProductVariant__c),
ISCHANGED(CH_Solution__c),
ISCHANGED(CH_SW_Release__c),
ISCHANGED(CH_SW_Module__c),
ISCHANGED(CH_SW_Build__c),
ISCHANGED(CH_SW_Component__c),
ISCHANGED(CH_DefectiveFix__c),
ISCHANGED(CH_CRNumber__c),
ISCHANGED(CH_CRStart__c),
ISCHANGED(CH_CRStatus__c),
ISCHANGED(CH_CRStatusTimestamp__c),
ISCHANGED(CH_TemporarySolution__c),
ISCHANGED(CH_SolutionDetails__c),
ISCHANGED(CH_ReportedDate__c),
ISCHANGED(CH_GWC_SecurityGroup__c),
ISCHANGED(Status),
ISCHANGED(CH_SecurityGroup__c),
ISCHANGED(CH_Article_Attached__c),
ISCHANGED(Allow_admin_login__c),
ISCHANGED(Origin),
ISCHANGED(Description),
ISCHANGED(CH_IssueDescription__c),
ISCHANGED(CH_Reported_By__c),
ISCHANGED(CH_ProblemCreationReason__c),
ISCHANGED(CH_Discovered_During__c),
ISCHANGED(CH_Discovered_in__c),
ISCHANGED(CH_Problem_Type__c),
ISCHANGED(CH_Repeatability__c),
ISCHANGED(CH_Problem_Category__c),
ISCHANGED(CH_Problems__c),
ISCHANGED(CH_Root_Cause_Description__c),
ISCHANGED(Steps_to_Reproduce_Issue__c),
ISCHANGED(CH_Cause_Type__c),
ISCHANGED(CH_Root_Cause__c),
ISCHANGED(CH_Caused_By__c),
ISCHANGED(CH_Urgency__c),
ISCHANGED(CH_SuspectedProblem__c),
ISCHANGED(CH_Workaround_Type__c),
ISCHANGED(CH_Workaround_Available__c),
ISCHANGED(CH_Workaround_Available_Date__c),
ISCHANGED(CH_RDInterface__c),
ISCHANGED(CH_RnD_Contact_Email__c),
ISCHANGED(CH_Target_Release__c),
ISCHANGED(CH_Target_Release_Date__c),
ISCHANGED(CH_SolutionDetails__c),
ISCHANGED(CH_SolutionType__c),
ISCHANGED(CH_Solution_Available__c)
)
)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>It is not possible to reopen a Problem once it&apos;s been closed</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RestoredDate</fullName>
        <active>true</active>
        <description>&quot;Restored Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. System Restored.&quot;</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
NOT(CH_IsCompleteRestore__c), 
NOT(ISNULL(CH_SystemRestored__c)))</errorConditionFormula>
        <errorDisplayField>CH_SystemRestored__c</errorDisplayField>
        <errorMessage>&quot;Restored Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. System Restored.&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RestrictUpdateOnCaseTimestamp</fullName>
        <active>true</active>
        <description>This validation rule is according to US-18473.If Initial Response Date is changed and both the database value was populated and the current value is populated AND user does not have permission set of CH Timestamp Admin, display error message.</description>
        <errorConditionFormula>OR(
AND( NOT $Permission.CH_Timestamp_Admin
,NOT(ISNULL(PRIORVALUE(CH_InitialResponse__c)))
,ISCHANGED(CH_InitialResponse__c)
,NOT(ISNULL(CH_InitialResponse__c))
),
AND( NOT $Permission.CH_Timestamp_Admin
,NOT(ISNULL(PRIORVALUE( CH_SystemRestored__c )))
,ISCHANGED(CH_SystemRestored__c)
,NOT(ISNULL(CH_SystemRestored__c))
),
AND( NOT $Permission.CH_Timestamp_Admin
,NOT(ISNULL(PRIORVALUE(CH_TemporarySolutionProvided__c)))
,ISCHANGED(CH_TemporarySolutionProvided__c)
,NOT(ISNULL(CH_TemporarySolutionProvided__c))
),
AND( NOT $Permission.CH_Timestamp_Admin
,NOT(ISNULL(PRIORVALUE( CH_SolutionProvided__c)))
,ISCHANGED(CH_SolutionProvided__c )
,NOT(ISNULL(CH_SolutionProvided__c))
),
AND( NOT $Permission.CH_Timestamp_Admin
,NOT(ISNULL(PRIORVALUE (CH_ServiceDisruptionReportProvided__c )))
,ISCHANGED(CH_ServiceDisruptionReportProvided__c)
,NOT(ISNULL(CH_ServiceDisruptionReportProvided__c ))
)
)</errorConditionFormula>
        <errorMessage>You do not have correct permissions to modify completion dates.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RuleBasedOnAsset</fullName>
        <active>true</active>
        <description>Either an Asset needs to be selected OR Product and Country must be populated.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, NOT(RecordType.DeveloperName = &apos;CH_Problem&apos;), 
ISBLANK(AssetId),
OR(ISBLANK( ProductId ),
ISBLANK(TEXT(Country__c ))
)
)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>Either an Asset needs to be selected OR Product and Country must be populated.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RuleForInitialResponseAndTemporarySol</fullName>
        <active>true</active>
        <description>Initial Response Date should be less than or equal to Temporary Solution Provided Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
NOT(ISNULL(CH_InitialResponse__c)), 
NOT(ISNULL(CH_TemporarySolutionProvided__c)), 
CH_InitialResponse__c &gt;  CH_TemporarySolutionProvided__c )</errorConditionFormula>
        <errorDisplayField>CH_InitialResponse__c</errorDisplayField>
        <errorMessage>Initial Response Date should be less than or equal to Temporary Solution Provided Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RuleForIssueOccurence</fullName>
        <active>true</active>
        <description>Issue Occurrence Date should be less than or equal to Reported Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c,
NOT(ISNULL(CH_IssueOccurenceDate__c  )), 
NOT(ISNULL(CH_ReportedDate__c)), 
CH_IssueOccurenceDate__c  &gt;  CH_ReportedDate__c
)</errorConditionFormula>
        <errorDisplayField>CH_IssueOccurenceDate__c</errorDisplayField>
        <errorMessage>Issue Occurrence Date should be less than or equal to Reported Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RuleForResponseAndSolutionProvided</fullName>
        <active>true</active>
        <description>Initial Response Date should be less than or equal to Solution Provided Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
NOT(ISNULL(CH_InitialResponse__c)), 
NOT(ISNULL(CH_SolutionProvided__c)), 
CH_InitialResponse__c &gt;  CH_SolutionProvided__c )</errorConditionFormula>
        <errorDisplayField>CH_InitialResponse__c</errorDisplayField>
        <errorMessage>Initial Response Date should be less than or equal to Solution Provided Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RuleForRestoreAndSolutionProvided</fullName>
        <active>true</active>
        <description>Restored Date should be less than or equal to Solution Provided Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c , 
NOT(ISNULL(CH_SystemRestored__c)), 
NOT(ISNULL(CH_SolutionProvided__c)), 
CH_SystemRestored__c &gt;  CH_SolutionProvided__c)</errorConditionFormula>
        <errorDisplayField>CH_SystemRestored__c</errorDisplayField>
        <errorMessage>Restored Date should be less than or equal to Solution Provided Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_RuleForRestoreAndTemporarySolution</fullName>
        <active>true</active>
        <description>Restored Date should be less than or equal to Temporary Solution Provided Date.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
NOT(ISNULL(CH_SystemRestored__c)), 
NOT(ISNULL(CH_TemporarySolutionProvided__c)), 
CH_SystemRestored__c &gt;  CH_TemporarySolutionProvided__c )</errorConditionFormula>
        <errorDisplayField>CH_SystemRestored__c</errorDisplayField>
        <errorMessage>Restored Date should be less than or equal to Temporary Solution Provided Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_SDRPDateLessThanClosedDate</fullName>
        <active>true</active>
        <description>Service Disruption Report Provided Milestone completion date must be smaller than the case closed date</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
 CH_IsServiceDisruptionReportProvided__c , 
NOT(ISNULL(CH_ServiceDisruptionReportProvided__c )), 
CH_ServiceDisruptionReportProvided__c &gt; ClosedDate)</errorConditionFormula>
        <errorDisplayField>CH_ServiceDisruptionReportProvided__c</errorDisplayField>
        <errorMessage>Service Disruption Report Provided date has to be less than or equal to closed date</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_SPDateLessThanClosedDate</fullName>
        <active>true</active>
        <description>Solution Provided date has to be less than or equal to closed date</description>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),
AND(CH_RecordTypeCheck__c, 
CH_IsCompleteSolutionProvided__c,
NOT(ISNULL(CH_SolutionProvided__c )),
CH_SolutionProvided__c &gt;  ClosedDate))</errorConditionFormula>
        <errorDisplayField>CH_SolutionProvided__c</errorDisplayField>
        <errorMessage>Solution Provided date has to be less than or equal to closed date</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ServiceDisruptionReportProvidedDate</fullName>
        <active>true</active>
        <description>&quot;Service Disruption Report Provided Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Service Disruption Report Provided.&quot;</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
NOT(CH_IsCompleteServiceDisruptionReport__c), 
NOT(ISNULL(CH_ServiceDisruptionReportProvided__c)))</errorConditionFormula>
        <errorDisplayField>CH_ServiceDisruptionReportProvided__c</errorDisplayField>
        <errorMessage>&quot;Service Disruption Report Provided Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Service Disruption Report Provided.&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ServiceTypeCannotBeBlank</fullName>
        <active>true</active>
        <description>Service Type Field cannot be None or Blank on Case Creation or updation</description>
        <errorConditionFormula>ISBLANK(TEXT(CH_ServiceType__c)) &amp;&amp;  (RecordType.DeveloperName =&apos;CH_NokiaStandardCase&apos; || RecordType.DeveloperName =&apos;CH_NokiaIncidentWithRestoration&apos; || RecordType.DeveloperName =&apos;CH_NokiaInformationRequest&apos;)</errorConditionFormula>
        <errorDisplayField>CH_ServiceType__c</errorDisplayField>
        <errorMessage>Service Type Cannot be blank or None</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Severity_Critical</fullName>
        <active>true</active>
        <description>Re-entitlement US 21297</description>
        <errorConditionFormula>OR(
AND(
    CH_RecordTypeCheck__c,
    ISPICKVAL(PRIORVALUE(Severity__c), &apos;Critical&apos;),
    ISPICKVAL(PRIORVALUE(CH_Outage__c), &apos;Yes&apos;), 
    OR(
        IF(
        ISCHANGED(CH_Outage__c),
        IF( 
            OR(
            ISPICKVAL(Status,&apos;Pending Customer&apos;),
            ISPICKVAL(Status,&apos;Restoration Provided&apos;),
            ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
            ISPICKVAL(Status,&apos;Solution Provided&apos;),
            ISPICKVAL(Status,&apos;Closed&apos;),
            ISPICKVAL(Status,&apos;Completed&apos;)
            ), 
        TRUE, FALSE), FALSE),
        IF(
            ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Major&apos;),
        IF(
            OR(
            ISPICKVAL(Status,&apos;Solution Provided&apos;),
            ISPICKVAL(Status,&apos;Closed&apos;),
            ISPICKVAL(Status,&apos;Completed&apos;)
            ),
        TRUE, FALSE),
    FALSE), 
        IF(
            ISCHANGED(Severity__c) &amp;&amp; OR(ISPICKVAL(Severity__c, &apos;Minor&apos;), ISPICKVAL(Severity__c, &apos;Information Request&apos;)),
        IF(
            OR(
            ISPICKVAL(Status,&apos;Created&apos;),
            ISPICKVAL(Status,&apos;Draft&apos;),
            ISPICKVAL(Status,&apos;Assigned&apos;),
            ISPICKVAL(Status,&apos;Responded in Progress&apos;),
            ISPICKVAL(Status,&apos;Pending Customer&apos;),
            ISPICKVAL(Status,&apos;Restoration Provided&apos;),
            ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
            ISPICKVAL(Status,&apos;Solution Provided&apos;),
            ISPICKVAL(Status,&apos;Closed&apos;),
            ISPICKVAL(Status,&apos;Completed&apos;)
            ),
        TRUE, FALSE),
        FALSE)
    )
),
AND(
    CH_RecordTypeCheck__c,
    ISPICKVAL(PRIORVALUE(Severity__c), &apos;Critical&apos;),
    ISPICKVAL(PRIORVALUE(CH_Outage__c), &apos;No&apos;), 
    OR(
        IF(
        ISCHANGED(CH_Outage__c),
        IF( 
            OR(
            ISPICKVAL(Status,&apos;Pending Customer&apos;),
            ISPICKVAL(Status,&apos;Restoration Provided&apos;),
            ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
            ISPICKVAL(Status,&apos;Solution Provided&apos;),
            ISPICKVAL(Status,&apos;Closed&apos;),
            ISPICKVAL(Status,&apos;Completed&apos;)
            ), 
        TRUE, FALSE), FALSE),
        IF(
            ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Major&apos;),
        IF(
            OR(
            ISPICKVAL(Status,&apos;Solution Provided&apos;),
            ISPICKVAL(Status,&apos;Closed&apos;),
            ISPICKVAL(Status,&apos;Completed&apos;)
            ),
        TRUE, FALSE),
    FALSE), 
        IF(
            ISCHANGED(Severity__c) &amp;&amp; OR(ISPICKVAL(Severity__c, &apos;Minor&apos;), ISPICKVAL(Severity__c, &apos;Information Request&apos;)),
        IF(
            OR(
            ISPICKVAL(Status,&apos;Created&apos;),
            ISPICKVAL(Status,&apos;Draft&apos;),
            ISPICKVAL(Status,&apos;Assigned&apos;),
            ISPICKVAL(Status,&apos;Responded in Progress&apos;),
            ISPICKVAL(Status,&apos;Pending Customer&apos;),
            ISPICKVAL(Status,&apos;Restoration Provided&apos;),
            ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
            ISPICKVAL(Status,&apos;Solution Provided&apos;),
            ISPICKVAL(Status,&apos;Closed&apos;),
            ISPICKVAL(Status,&apos;Completed&apos;)
            ),
        TRUE, FALSE),
        FALSE)
    )
)
)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>If case severity is critical, you are only allowed to change severity and outage in certain statuses.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Severity_Information_Request</fullName>
        <active>true</active>
        <description>US 21408</description>
        <errorConditionFormula>AND(
		CH_RecordTypeCheck__c,
		ISPICKVAL(PRIORVALUE(Severity__c),&apos;Information Request&apos;),
	AND(
   		OR(
	          ISCHANGED(Severity__c),
	          ISCHANGED(CH_Outage__c)
            	), 
           	OR(
	           ISPICKVAL(Status,&apos;Created&apos;),
	           ISPICKVAL(Status,&apos;Draft&apos;),
	           ISPICKVAL(Status,&apos;Assigned&apos;),
	           ISPICKVAL(Status,&apos;Responded in Progress&apos;),
	           ISPICKVAL(Status,&apos;Pending Customer&apos;),
	           ISPICKVAL(Status,&apos;Restoration Provided&apos;),
	           ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
	           ISPICKVAL(Status,&apos;Solution Provided&apos;),
	           ISPICKVAL(Status,&apos;Closed&apos;),
	           ISPICKVAL(Status,&apos;Completed&apos;)
           		)))</errorConditionFormula>
        <errorMessage>If case severity is information request, you are not able to modify severity and outage fields.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Severity_Major</fullName>
        <active>true</active>
        <description>Re-entitlement US 21385</description>
        <errorConditionFormula>OR(
AND(
ISPICKVAL(PRIORVALUE(Severity__c), &apos;Major&apos;),
ISPICKVAL(PRIORVALUE(CH_Outage__c), &apos;Yes&apos;), 
OR(
IF(
ISCHANGED(CH_Outage__c),
IF( 
OR(
ISPICKVAL(Status,&apos;Pending Customer&apos;),
ISPICKVAL(Status,&apos;Restoration Provided&apos;),
ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)), 
TRUE, FALSE), FALSE),
IF(
ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Critical&apos;),
IF(
OR(
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)),
TRUE, FALSE),
FALSE), 
IF(
ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Information Request&apos;),
IF(
OR(
ISPICKVAL(Status,&apos;Created&apos;),
ISPICKVAL(Status,&apos;Draft&apos;),
ISPICKVAL(Status,&apos;Assigned&apos;),
ISPICKVAL(Status,&apos;Responded in Progress&apos;),
ISPICKVAL(Status,&apos;Pending Customer&apos;),
ISPICKVAL(Status,&apos;Restoration Provided&apos;),
ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed)&apos;)),
TRUE, FALSE),
FALSE),
IF(
ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Minor&apos;),
IF(
OR(
ISPICKVAL(Status,&apos;Pending Customer&apos;),
ISPICKVAL(Status,&apos;Restoration Provided&apos;),
ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)),
TRUE, FALSE),
FALSE))),
AND(
CH_RecordTypeCheck__c,
ISPICKVAL(PRIORVALUE(Severity__c), &apos;Major&apos;),
ISPICKVAL(PRIORVALUE(CH_Outage__c), &apos;No&apos;), 
OR(
IF(
ISCHANGED(CH_Outage__c),
IF( 
OR(
ISPICKVAL(Status,&apos;Responded in Progress&apos;),
ISPICKVAL(Status,&apos;Pending Customer&apos;),
ISPICKVAL(Status,&apos;Restoration Provided&apos;),
ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)), 
TRUE, FALSE), FALSE),
IF(
ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Critical&apos;),
IF(
OR(
ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)),
TRUE, FALSE),
FALSE), 
IF(
ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Information Request&apos;),
IF(
OR(
ISPICKVAL(Status,&apos;Created&apos;),
ISPICKVAL(Status,&apos;Draft&apos;),
ISPICKVAL(Status,&apos;Assigned&apos;),
ISPICKVAL(Status,&apos;Responded in Progress&apos;),
ISPICKVAL(Status,&apos;Pending Customer&apos;),
ISPICKVAL(Status,&apos;Restoration Provided&apos;),
ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)),
TRUE, FALSE),
FALSE),
IF(
ISCHANGED(Severity__c) &amp;&amp; ISPICKVAL(Severity__c, &apos;Minor&apos;),
IF(
OR(
ISPICKVAL(Status,&apos;Solution Provided&apos;),
ISPICKVAL(Status,&apos;Closed&apos;),
ISPICKVAL(Status,&apos;Completed&apos;)),
TRUE, FALSE),
FALSE))))</errorConditionFormula>
        <errorMessage>If case severity is major, you are only allowed to change severity and outage in certain statuses.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_Severity_Minor</fullName>
        <active>true</active>
        <description>Validation rule when changing from severity Minor to something else.
US 21407</description>
        <errorConditionFormula>AND(
   CH_RecordTypeCheck__c,
   ISPICKVAL(PRIORVALUE(Severity__c),&apos;Minor&apos;),
   ISCHANGED(Severity__c),
   OR(
       IF(
       AND(ISPICKVAL(Severity__c,&apos;Major&apos;),ISPICKVAL(CH_Outage__c,&apos;No&apos;)),
       IF(
           OR(
           ISPICKVAL(Status,&apos;Solution Provided&apos;),
           ISPICKVAL(Status,&apos;Closed&apos;),
           ISPICKVAL(Status,&apos;Completed&apos;)
           ),
       TRUE, FALSE), 
       FALSE),
       IF(
           OR(ISPICKVAL(Severity__c,&apos;Critical&apos;), ISPICKVAL(Severity__c,&apos;Information Request&apos;)),
       IF(
           OR(
           ISPICKVAL(Status,&apos;Created&apos;),
           ISPICKVAL(Status,&apos;Draft&apos;),
           ISPICKVAL(Status,&apos;Assigned&apos;),
           ISPICKVAL(Status,&apos;Responded in Progress&apos;),
           ISPICKVAL(Status,&apos;Pending Customer&apos;),
           ISPICKVAL(Status,&apos;Restoration Provided&apos;),
           ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
           ISPICKVAL(Status,&apos;Solution Provided&apos;),
           ISPICKVAL(Status,&apos;Closed&apos;),
           ISPICKVAL(Status,&apos;Completed&apos;)
           ),
       TRUE, FALSE),
   FALSE),
       IF(
           AND(ISPICKVAL(Severity__c,&apos;Major&apos;),ISPICKVAL(CH_Outage__c,&apos;Yes&apos;)),
       IF(
           OR(
           ISPICKVAL(Status,&apos;Created&apos;),
           ISPICKVAL(Status,&apos;Draft&apos;),
           ISPICKVAL(Status,&apos;Assigned&apos;),
           ISPICKVAL(Status,&apos;Responded in Progress&apos;),
           ISPICKVAL(Status,&apos;Pending Customer&apos;),
           ISPICKVAL(Status,&apos;Restoration Provided&apos;),
           ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;),
           ISPICKVAL(Status,&apos;Solution Provided&apos;),
           ISPICKVAL(Status,&apos;Closed&apos;),
           ISPICKVAL(Status,&apos;Completed&apos;)
           ),
       TRUE, FALSE),
       FALSE)
   )
 )</errorConditionFormula>
        <errorMessage>If case severity is minor, you are only able to change severity to major before status is Solution Provided.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_SolutionProvidedDate</fullName>
        <active>true</active>
        <description>&quot;Solution Provided Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Solution Provided.&quot;</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
NOT(CH_IsCompleteSolutionProvided__c), 
NOT(ISNULL(CH_SolutionProvided__c)))</errorConditionFormula>
        <errorDisplayField>CH_SolutionProvided__c</errorDisplayField>
        <errorMessage>&quot;Solution Provided Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Solution Provided.&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StageValidationWhenNotDiagnosis</fullName>
        <active>false</active>
        <errorConditionFormula>($Profile.Name  = &apos;Engineer&apos; ||  $Profile.Name = &apos;System Administrator&apos;) &amp;&amp;
( $User.Id = Owner:User.Id ) &amp;&amp; 
(ISPICKVAL( CH_Stage__c , &apos;Diagnosis &amp; Technical Analysis&apos;) 
|| ISPICKVAL( CH_Stage__c , &apos;Resolve&apos;) || ISPICKVAL( CH_Stage__c , &apos;Close&apos;)) &amp;&amp; 
((ISPICKVAL(PRIORVALUE(Severity__c) , &apos;Critical&apos;) &amp;&amp;  TEXT( Severity__c ) = &apos;Information Request&apos; ) || (ISPICKVAL(PRIORVALUE(Severity__c) , &apos;Information Request&apos;) &amp;&amp;  TEXT( Severity__c ) = &apos;Critical&apos; )) &amp;&amp;
OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; ,
RecordType.DeveloperName =&apos;CH_NokiaIncidentWithRestoration&apos;,
RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;,
RecordType.DeveloperName = &apos;CH_Problem&apos;)</errorConditionFormula>
        <errorMessage>You cannot edit some values of severity when stage in Diagnosis &amp; Technical Analysis OR Resolve OR Close</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusCannotBeClosed</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,  RecordType.Name=&apos;Nokia Information Request&apos;,  RecordType.Name=&apos;Nokia Standard Case&apos;),ISPICKVAL(Status ,&apos;Closed&apos;),NOT(CH_IsCompleteSolutionProvided__c))</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusCannotbeEdited</fullName>
        <active>true</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),

OR(
AND(
	OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,  RecordType.Name=&apos;Nokia Information Request&apos;,  RecordType.Name=&apos;Nokia Standard Case&apos;),
	OR(
		AND(OR(ISPICKVAL(Status ,&apos;Closed&apos;),ISPICKVAL(Status,&apos;Solution Provided&apos;)),NOT(CH_IsCompleteSolutionProvided__c)),
		AND(ISPICKVAL(Status ,&apos;Created&apos;), CH_IsCompleteInitialResponse__c),
		AND(ISPICKVAL(Status,&apos;Pending Customer&apos;) ,OR(NOT( CH_IsCompleteInitialResponse__c ), CH_IsCompleteSolutionProvided__c )),
		AND(ISPICKVAL(Status,&apos;Restoration Provided&apos;) ,OR(NOT(CH_IsCompleteRestore__c), CH_IsCompleteSolutionProvided__c, CH_IsCompleteTemporarySolution__c)),
		AND(ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;) ,OR(NOT(CH_IsCompleteTemporarySolution__c), CH_IsCompleteSolutionProvided__c ))
	)
),   
AND(
	(NOW()- ClosedDate)&lt; 180,
	ISPICKVAL(Status,&apos;Completed&apos;),
	CH_RecordTypeCheck__c,       
	OR(   
		CH_LegacyCaseNumber__c=null,
		AND(
			$Label.CH_Enable_Completion_of_Legacy_Cases=&apos;Yes&apos;,CH_LegacyCaseNumber__c!=null
		)
	)
)
)
)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusCompleted</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.
Case Status can be allowed to transition from status Closed to Completed only if CH_LegacyCaseStatus__c is Closed (Added for NOKIASC-25597)</description>
        <errorConditionFormula>OR(
AND
(
(NOW()- ClosedDate)&lt; 180,ISPICKVAL(Status,&apos;Completed&apos;), CH_RecordTypeCheck__c,CH_LegacyCaseNumber__c=null
),
AND(
(NOW()- ClosedDate)&lt; 180,ISPICKVAL(Status,&apos;Completed&apos;), CH_RecordTypeCheck__c,$Label.CH_Enable_Completion_of_Legacy_Cases=&apos;Yes&apos;,CH_LegacyCaseNumber__c!=null
)
)</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusCreated</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND( OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,     RecordType.Name=&apos;Nokia Information Request&apos;,      RecordType.Name=&apos;Nokia Standard Case&apos;), ISPICKVAL(Status ,&apos;Created&apos;),  CH_IsCompleteInitialResponse__c )</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusPendingCustomer</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,      RecordType.Name=&apos;Nokia Information Request&apos;,      RecordType.Name=&apos;Nokia Standard Case&apos;), ISPICKVAL(Status,&apos;Pending Customer&apos;) ,OR(NOT( CH_IsCompleteInitialResponse__c ), CH_IsCompleteSolutionProvided__c ))</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusPendingCustomer2</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(
CH_RecordTypeCheck__c,
NOT( ISPICKVAL( Status ,&apos;Pending Customer&apos;)), 
TEXT(Status) &lt;&gt;  CH_PriorToPending__c,
ISPICKVAL(PRIORVALUE(Status),&apos;Pending Customer&apos;)
)</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusRespondedInProgress</fullName>
        <active>true</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),
AND(OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;, RecordType.Name=&apos;Nokia Information Request&apos;, RecordType.Name=&apos;Nokia Standard Case&apos;), ISPICKVAL(Status,&apos;Responded in Progress&apos;) ,OR(NOT( CH_IsCompleteInitialResponse__c ), CH_IsCompleteSolutionProvided__c, CH_IsCompleteTemporarySolution__c,
CH_IsCompleteRestore__c )))</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusRestorationProvided</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,      RecordType.Name=&apos;Nokia Information Request&apos;,      RecordType.Name=&apos;Nokia Standard Case&apos;), ISPICKVAL(Status,&apos;Restoration Provided&apos;) ,OR(NOT(CH_IsCompleteRestore__c), CH_IsCompleteSolutionProvided__c,  CH_IsCompleteTemporarySolution__c))</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusSolutionProvided</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,      RecordType.Name=&apos;Nokia Information Request&apos;,      RecordType.Name=&apos;Nokia Standard Case&apos;), ISPICKVAL(Status,&apos;Solution Provided&apos;), NOT(CH_IsCompleteSolutionProvided__c))</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_StatusTemporarySolutionProvided</fullName>
        <active>false</active>
        <description>Case Status transition is not valid or Status field has been manually updated which is not supported.</description>
        <errorConditionFormula>AND(OR(RecordType.Name=&apos;Nokia Incident with Restoration&apos;,      RecordType.Name=&apos;Nokia Information Request&apos;,      RecordType.Name=&apos;Nokia Standard Case&apos;), ISPICKVAL(Status,&apos;Temp Sol. Provided&apos;) ,OR(NOT(CH_IsCompleteTemporarySolution__c), CH_IsCompleteSolutionProvided__c ))</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>Case Status transition is not valid or Status field has been manually updated which is not supported.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_TCACheckedClosedTicket</fullName>
        <active>false</active>
        <description>US 23915</description>
        <errorConditionFormula>AND(OR($RecordType.Name = &apos;Nokia Incident with Restoration&apos;, $RecordType.Name = &apos;Nokia Standard Case&apos;),
ISPICKVAL(Status, &apos;Closed&apos;),
	CH_TCAReady__c=FALSE)</errorConditionFormula>
        <errorMessage>TCA Ready must be ticked before closing this Support Ticket
For Outage Reported or Assessed the following fields must be populated before closure:None Alarmed Outage, Outage Context, Restore Action, Primary Cause, Secondary Cause and Outage Triggered by</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_TCAChecked_DiagTOResolve</fullName>
        <active>false</active>
        <description>US 23915</description>
        <errorConditionFormula>AND(OR($RecordType.Name = &apos;Nokia Incident with Restoration&apos;, $RecordType.Name = &apos;Nokia Standard Case&apos;),
ISPICKVAL(PRIORVALUE(CH_Stage__c), &apos;Diagnosis &amp; Technical Analysis&apos;),
ISPICKVAL(CH_Stage__c, &apos;Resolve&apos;),
	CH_TCAReady__c=FALSE)</errorConditionFormula>
        <errorMessage>TCA Ready must be ticked before closing this Support Ticket
For Outage Reported or Assessed the following fields must be populated before closure:None Alarmed Outage, Outage Context, Restore Action, Primary Cause, Secondary Cause and Outage Triggered by</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_TemporarySolutionProvidedDate</fullName>
        <active>true</active>
        <description>&quot;Temporary Solution Provided Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Temporary Solution Provided.&quot;</description>
        <errorConditionFormula>AND(($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false),
AND($Profile.Name &lt;&gt; &quot;Data Loader Profile&quot;,
CH_RecordTypeCheck__c, 
NOT(CH_IsCompleteTemporarySolution__c), 
NOT(ISNULL(CH_TemporarySolutionProvided__c))))</errorConditionFormula>
        <errorDisplayField>CH_TemporarySolutionProvided__c</errorDisplayField>
        <errorMessage>&quot;Temporary Solution Provided Date cannot be set directly. Instead you must accept the corresponding deliverable i.e. Temporary Solution Provided.&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_UserCannotEditManually1</fullName>
        <active>false</active>
        <description>User cannot populate a value for date/time fields based on conditions.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
OR(
AND(NOT(CH_IsCompleteInitialResponse__c), 
NOT(ISNULL(CH_InitialResponse__c))), 
AND(NOT(CH_IsCompleteRestore__c), 
NOT(ISNULL(CH_SystemRestored__c))), 
AND(OR(NOT(CH_IsCompleteTemporarySolution__c),
CH_TemporarySolutionNotApplicable__c), 
NOT(ISNULL(CH_TemporarySolutionProvided__c))), 
AND(NOT(CH_IsCompleteServiceDisruptionReport__c), 
NOT(ISNULL(CH_ServiceDisruptionReportProvided__c))), 
AND(NOT(CH_IsCompleteSolutionProvided__c), 
NOT(ISNULL(CH_SolutionProvided__c)))
)
)</errorConditionFormula>
        <errorMessage>&quot;Date and Time fields cannot be set directly. Instead you must accept corresponding deliverable (e.g. Solution Provided).&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_UserCannotEditManually2</fullName>
        <active>true</active>
        <description>User cannot clear a value for date/time fields based on conditions.</description>
        <errorConditionFormula>AND(CH_RecordTypeCheck__c, 
OR(
AND(CH_IsCompleteInitialResponse__c, 
ISNULL(CH_InitialResponse__c)), 
AND(CH_IsCompleteRestore__c,  
ISNULL(CH_SystemRestored__c)), 
AND(CH_IsCompleteTemporarySolution__c, 
ISNULL(CH_TemporarySolutionProvided__c)), 
AND(CH_IsCompleteServiceDisruptionReport__c, 
ISNULL(CH_ServiceDisruptionReportProvided__c)), 
AND(CH_IsCompleteSolutionProvided__c, 
ISNULL(CH_SolutionProvided__c))
))</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>&quot;Date and Time fields cannot be cleared directly. Instead you must reject corresponding deliverable (e.g. Solution Provided).&quot;</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ValidateBasedOnStage</fullName>
        <active>false</active>
        <errorConditionFormula>(ISPICKVAL( CH_Stage__c , &apos;Diagnosis &amp; Technical Analysis&apos;) 
|| ISPICKVAL( CH_Stage__c , &apos;Resolve&apos;) || ISPICKVAL( CH_Stage__c , &apos;Close&apos;)) &amp;&amp; 
(ISCHANGED( CH_Outage__c )) &amp;&amp; 
OR(RecordType.DeveloperName = &apos;CH_NokiaStandardCase&apos; , 
RecordType.DeveloperName =&apos;CH_NokiaIncidentWithRestoration&apos;, 
RecordType.DeveloperName = &apos;CH_NokiaInformationRequest&apos;, 
RecordType.DeveloperName = &apos;CH_Problem&apos;)</errorConditionFormula>
        <errorMessage>You cannot  edit outage for Stage in Diagnosis &amp; Technical Analysis OR Resolve OR Close</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ValidateP20OrderDetailRule</fullName>
        <active>false</active>
        <description>If user puts a value in any one of these fields they need to populate values in all three field.</description>
        <errorConditionFormula>AND ( 
 CH_RecordTypeCheck__c,
 NOT ( AND (
    ISBLANK(CH_PlantCode__c), 
    ISBLANK(CH_LocalServiceOrder__c), 
    ISBLANK(CH_GlobalServiceOrder__c)
 )),
 NOT ( AND (
   NOT(ISBLANK(CH_PlantCode__c)), 
   NOT(ISBLANK(CH_LocalServiceOrder__c)), 
   NOT(ISBLANK(CH_GlobalServiceOrder__c))
 ))
)</errorConditionFormula>
        <errorMessage>Local Service Order, Global Service Order and Plant Code fields all need be populated or all left blank.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ValidateStatusValueRespondedInProgres</fullName>
        <active>false</active>
        <errorConditionFormula>AND( CH_RecordTypeCheck__c ,
ISPICKVAL(Status,&apos;Responded in Progress&apos;),
OR
(((ISPICKVAL(PRIORVALUE(Severity__c), &apos;Critical&apos;) &amp;&amp;
ISPICKVAL(PRIORVALUE(CH_Outage__c), &apos;Yes&apos;)) &amp;&amp;
NOT((ISPICKVAL(Severity__c, &apos;Major&apos;) &amp;&amp;
ISPICKVAL(CH_Outage__c, &apos;Yes&apos;))) &amp;&amp; ISCHANGED(Severity__c)),
((ISPICKVAL(PRIORVALUE(Severity__c), &apos;Major&apos;) &amp;&amp;
ISPICKVAL(PRIORVALUE(CH_Outage__c), &apos;Yes&apos;)) &amp;&amp;
NOT((ISPICKVAL(Severity__c, &apos;Critical&apos;) &amp;&amp;
ISPICKVAL(CH_Outage__c, &apos;Yes&apos;))) &amp;&amp; ISCHANGED(Severity__c))
))</errorConditionFormula>
        <errorMessage>Severity can not be changed when status is &apos;Responded in Progress&apos;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ValidationForReportedDate</fullName>
        <active>true</active>
        <description>Checks status Draft and Created. This was changed on Nov 14,2019</description>
        <errorConditionFormula>IF(HWS_RecordTypeCheck__c,
		ISCHANGED( CH_ReportedDate__c ) &amp;&amp; HWS_SOO_Reference_Number__c!=null,
		ISCHANGED( CH_ReportedDate__c ) &amp;&amp; NOT(ISPICKVAL( Status , &apos;Draft&apos;) ) &amp;&amp; NOT(ISPICKVAL( Status , &apos;Created&apos;) ))</errorConditionFormula>
        <errorDisplayField>CH_ReportedDate__c</errorDisplayField>
        <errorMessage>You can only change Reported Date when SWS Case is in status Draft/Created or HWS case is not Submitted to SOO.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CH_ValidationRuleForStatus</fullName>
        <active>true</active>
        <description>Validation rule to prevent user from updating the status to &quot;Canceled&quot; when Status &lt;&gt;Draft, Created, Assigned or when the &quot;Reason for cancellation&quot; is empty. This will prevent user from doing updates</description>
        <errorConditionFormula>AND(OR(ISPICKVAL(PRIORVALUE(Status),&quot;Draft&quot;),
ISPICKVAL(PRIORVALUE(Status),&quot;Assigned&quot;),
ISPICKVAL(PRIORVALUE(Status),&quot;Created&quot;)),
ISBLANK(CH_ReasonForCancellation__c),
ISPICKVAL(Status,&quot;Cancelled&quot;),
CH_RecordTypeCheck__c,
CH_RecordTypeDevName__c &lt;&gt; &apos;CH_Problem&apos; )</errorConditionFormula>
        <errorMessage>Can not Cancel Case when Initial Response milestone is not completed</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CSR_Opportunity_Mandatory_If_RFP_or_RFQ</fullName>
        <active>true</active>
        <description>If &quot;Support Ticket Origin&quot; is &quot;RFP&quot; or &quot;RFQ&quot;, Opportunity should be mandatory.</description>
        <errorConditionFormula>AND(
				OR (
								  RecordType.DeveloperName=&quot;Customer_Security_Request&quot;
								, RecordType.DeveloperName=&quot;Customer_General_Security_Request_SIMPLE&quot;
				   )
				, OR(
						  		 ISPICKVAL(Origin,&quot;RFP&quot;)
								 , ISPICKVAL(Origin,&quot;RFQ&quot;)
						  )
    , ISBLANK(Opportunity__c)  
			)</errorConditionFormula>
        <errorDisplayField>Opportunity__c</errorDisplayField>
        <errorMessage>You should insert an opportunity.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>CSR_SME_response</fullName>
        <active>true</active>
        <errorConditionFormula>AND(RecordType.DeveloperName=&quot;Customer_Security_Request&quot;,
				SME_response_available__c,
				LEN(Response__c)=0
    )</errorConditionFormula>
        <errorDisplayField>Response__c</errorDisplayField>
        <errorMessage>Response should be fulfilled</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Cannot_Assign_tickets_to_SFDC_queue</fullName>
        <active>true</active>
        <description>Restrict users to select Tier 3 -Salesforce.</description>
        <errorConditionFormula>AND( 
ISCHANGED(OwnerId), 
OwnerId = &quot;00G41000001MFb1&quot;, 
$Profile.Name &lt;&gt; &quot;System Administrator&quot;)</errorConditionFormula>
        <errorMessage>You are restricted to select Tier 3- Salesforce as an owner. 
Please contact your Tier 2 for help.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Check_at_least_1_ODR</fullName>
        <active>true</active>
        <description>Checks if at least 1 ODR was created upon case closure &amp; If Outage Type was selected
Old Formula:

AND(CH_Out__c = 0, ISPICKVAL(CH_Stage__c, &apos;Close&apos;),  ISPICKVAL(CH_Outage__c, &apos;Yes&apos;),  RecordType.Name = &apos;Nokia Incident with Restoration&apos;)</description>
        <errorConditionFormula>AND($Setup.CH_CaseStatus_Validation_Bypass__c.CH_Disable_Validation_Rules__c = false,
AND(ISPICKVAL(CH_AssessedOutage__c, &apos;Yes&apos;),ISPICKVAL(CH_Stage__c, &apos;Close&apos;),CH_Out__c = 0,RecordType.Name = &apos;Nokia Incident with Restoration&apos;))</errorConditionFormula>
        <errorMessage>When closing a Support Ticket at least one ODR must have been created. Please Create an ODR before closing the Support Ticket</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Due_Date_for_GSS</fullName>
        <active>false</active>
        <errorConditionFormula>Due_Date_for_GSS__c  &gt; Due_Date__c</errorConditionFormula>
        <errorDisplayField>Due_Date_for_GSS__c</errorDisplayField>
        <errorMessage>GSS Due Date can&apos;t be after Customer Due Date.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Assigned_User</fullName>
        <active>true</active>
        <description>When the Status is &quot;Assigned&quot;, the Owner must be a Salesforce User.</description>
        <errorConditionFormula>AND (
				RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
				ISPICKVAL ( Status , &quot;Assigned&quot; ) ,
				NOT ( LEFT ( OwnerId , 3 ) = &quot;005&quot; ) 
				)</errorConditionFormula>
        <errorDisplayField>OwnerId</errorDisplayField>
        <errorMessage>You must assign a ticket to a Salesforce User, not a Queue.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Assigned_to_Escalated_Queue</fullName>
        <active>true</active>
        <description>When the Ticket Status is changing from &quot;Assigned&quot; to &quot;Escalated&quot;, the next Owner must a Queue.</description>
        <errorConditionFormula>AND (
            RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
            ISPICKVAL ( PRIORVALUE ( Status ) , &quot;Assigned&quot; ) ,
            ISPICKVAL ( Status , &quot;Escalated&quot; ) ,
            NOT ( LEFT ( OwnerId , 3 ) = &quot;00G&quot; ) ,
                            NOT ( ISPICKVAL ( Status  , &quot;Closed&quot; ) )
            )</errorConditionFormula>
        <errorDisplayField>OwnerId</errorDisplayField>
        <errorMessage>You must escalate a ticket to a Queue first.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_AwaitingOnResponse</fullName>
        <active>true</active>
        <description>When the Ticket Status was &quot;Awaiting on Response&quot;, if next Status is &quot;Escalated&quot;, the owner should be themselves or queue.</description>
        <errorConditionFormula>AND ( 
				RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
				ISCHANGED ( Status ) ,
				ISPICKVAL ( PRIORVALUE ( Status ) , &quot;Awaiting on Response&quot; ) ,
				ISPICKVAL ( Status , &quot;Escalated&quot; ) ,
    ISCHANGED ( OwnerId ) ,
				NOT ( LEFT ( OwnerId , 3 ) = &quot;00G&quot; ) 
)</errorConditionFormula>
        <errorDisplayField>OwnerId</errorDisplayField>
        <errorMessage>You must escalate the ticket to either yourself or a queue.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Change_to_New</fullName>
        <active>true</active>
        <description>The Status can&apos;t be changed to &quot;New&quot; again.</description>
        <errorConditionFormula>AND ( 
				RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
				ISCHANGED ( Status ) ,
				NOT ( ISPICKVAL ( PRIORVALUE ( Status ) , &quot;New&quot; ) ) ,
				ISPICKVAL ( Status , &quot;New&quot; )
)</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>You can&apos;t change the Status back to &quot;New&quot;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Close_Ticket</fullName>
        <active>true</active>
        <description>When the Ticket Status is &quot;Closed&quot;, the owner must be a User.</description>
        <errorConditionFormula>AND (
            RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
            ISCHANGED ( Status ) ,
            ISPICKVAL ( Status , &quot;Closed&quot; ) ,
            LEFT ( OwnerId , 3 ) != &quot;005&quot;
            )</errorConditionFormula>
        <errorDisplayField>OwnerId</errorDisplayField>
        <errorMessage>Before closing the ticket, the owner must be a Salesforce User.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Closed_Ticket</fullName>
        <active>true</active>
        <description>When the Ticket Status is &quot;Closed&quot;, the Ticket isn&apos;t editable.</description>
        <errorConditionFormula>AND ( 
				  RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
      ISPICKVAL ( PRIORVALUE ( Status ) , &quot;Closed&quot; ) ,
      NOT ( ISNEW () ) ,
				        OR (
                ISCHANGED ( Subject ) ,  
                ISCHANGED ( Description ) ,
                ISCHANGED ( Type ) ,
																ISCHANGED ( Status ) ,
                ISCHANGED ( Priority ) ,
																ISCHANGED ( EDUT_Product_Business_Group__c ) ,    
                ISCHANGED ( EDUT_Number_of_Transactions__c ) ,
                ISCHANGED ( ParentId ) ,
															 ISCHANGED ( OwnerId ) ,
                ISCHANGED ( EDUT_On_Hold_Reason__c ) ,
																ISCHANGED ( Origin ) ,    
                ISCHANGED ( EDUT_Division__c ) ,
                ISCHANGED ( Ticket_Age_In_Days__c ) , 
															 ISCHANGED ( SuppliedName ) ,
																ISCHANGED ( SuppliedEmail ) ,
																ISCHANGED ( SuppliedPhone ) ,
																ISCHANGED ( EDUT_External_Company_Name__c ) , 
                ISCHANGED ( ContactId ) , 
																ISCHANGED ( EDUT_Random__c ) ,
																ISCHANGED ( EDUT_Owners_Queue__c ) 
																)
)</errorConditionFormula>
        <errorMessage>When the Ticket Status is &quot;Closed&quot;, you can&apos;t edit the Ticket.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Division</fullName>
        <active>true</active>
        <description>When the Ticket Origin is &quot;E-Ticket Internal Site&quot;, the Division must be filled in.</description>
        <errorConditionFormula>AND (
            RecordType.DeveloperName = &quot;EDU_Ticketing&quot; ,
            ISPICKVAL ( EDUT_Division__c , &quot;&quot; ) ,
            ISPICKVAL ( Origin , &quot;E-Ticket Internal Site&quot; ) ,
            NOT ( ISPICKVAL ( Status , &quot;New&quot; ) ) ,
            NOT ( ISPICKVAL ( Status , &quot;Assigned&quot; ) ) 
)</errorConditionFormula>
        <errorDisplayField>EDUT_Division__c</errorDisplayField>
        <errorMessage>When the Ticket Origin is &quot;E-Ticket Internal Site&quot;, the Division must be filled in.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_External_Company_Name</fullName>
        <active>true</active>
        <description>When the Ticket Origin is either &quot;E-Ticket External Site&quot; or &quot;E-Ticket Partner Site&quot;, the External Company Name must be filled in.</description>
        <errorConditionFormula>AND (
            RecordType.DeveloperName = &quot;EDU_Ticketing&quot; , 
            ISBLANK ( EDUT_External_Company_Name__c ) , 
            OR ( 
                            ISPICKVAL ( Origin , &quot;E-Ticket External Site&quot; ) , 
                            ISPICKVAL ( Origin , &quot;E-Ticket Partner Site&quot; ) 
            ) ,
            NOT ( ISPICKVAL ( Status , &quot;New&quot; ) ) ,
            NOT ( ISPICKVAL ( Status , &quot;Assigned&quot; ) ) 
)</errorConditionFormula>
        <errorDisplayField>EDUT_External_Company_Name__c</errorDisplayField>
        <errorMessage>When the Ticket Origin is either &quot;E-Ticket External Site&quot; or &quot;E-Ticket Partner Site&quot;, the External Company Name must be filled in.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Invalid_Ticket</fullName>
        <active>true</active>
        <description>When the Ticket Status is &quot;Invalid&quot;, the Ticket isn&apos;t editable.</description>
        <errorConditionFormula>AND ( 
				  RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
      ISPICKVAL ( PRIORVALUE ( Status ) , &quot;Invalid&quot; ) ,
      NOT ( ISNEW () ) ,
				        OR (
                ISCHANGED ( Subject ) ,  
                ISCHANGED ( Description ) ,
                ISCHANGED ( Type ) ,
																ISCHANGED ( Status ) ,
                ISCHANGED ( Priority ) ,
																ISCHANGED ( EDUT_Product_Business_Group__c ) ,    
                ISCHANGED ( EDUT_Number_of_Transactions__c ) ,
                ISCHANGED ( ParentId ) ,
															 ISCHANGED ( OwnerId ) ,
                ISCHANGED ( EDUT_On_Hold_Reason__c ) ,
																ISCHANGED ( Origin ) ,    
                ISCHANGED ( EDUT_Division__c ) ,
                ISCHANGED ( Ticket_Age_In_Days__c ) , 
															 ISCHANGED ( SuppliedName ) ,
																ISCHANGED ( SuppliedEmail ) ,
																ISCHANGED ( SuppliedPhone ) ,
																ISCHANGED ( EDUT_External_Company_Name__c ) , 
                ISCHANGED ( ContactId ) , 
																ISCHANGED ( EDUT_Random__c ) ,
																ISCHANGED ( EDUT_Owners_Queue__c ) 
																)
)</errorConditionFormula>
        <errorMessage>When the Ticket Status is &quot;Invalid&quot;, you can&apos;t edit the Ticket.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_New_to_Closed</fullName>
        <active>true</active>
        <description>When the Ticket Status is created with the Status &quot;Closed&quot;, it must be in the Status &quot;New&quot; first, and then changed to &quot;Closed&quot;.</description>
        <errorConditionFormula>AND (
RecordType.DeveloperName = &apos;EDU_Ticketing&apos; ,
OR( ISPICKVAL ( Status , &quot;Closed&quot; ), ISPICKVAL ( Status , &quot;Invalid&quot; ) ),
ISNEW ()
)</errorConditionFormula>
        <errorDisplayField>Status</errorDisplayField>
        <errorMessage>You can&apos;t create a Ticket with the Status &quot;Closed/Invalid&quot;. It must be in the Status &quot;New&quot; first and then changed to &quot;Closed/Invalid&quot;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_On_Hold_Reason</fullName>
        <active>true</active>
        <description>When Ticket Status = &quot;Awaiting on Response&quot;, the field &quot;On Hold Reason&quot; must be filled in.</description>
        <errorConditionFormula>AND (
            RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
            ISPICKVAL ( Status , &quot;Awaiting on Response&quot; ) ,
            ISPICKVAL ( EDUT_On_Hold_Reason__c , &quot;&quot; )
            )</errorConditionFormula>
        <errorDisplayField>EDUT_On_Hold_Reason__c</errorDisplayField>
        <errorMessage>When Ticket Status = &quot;Awaiting on Response&quot;, the On Hold Reason must be filled in.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Prevent_Loop</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
				RecordType.DeveloperName = &apos;EDU_Ticketing&apos; , 
				CONTAINS ( $Label.EDUT_Dont_Create_Tickets , SuppliedEmail )
)</errorConditionFormula>
        <errorDisplayField>SuppliedEmail</errorDisplayField>
        <errorMessage>You can&apos;t create a Support Ticket from this Email.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>EDUT_Type</fullName>
        <active>true</active>
        <description>When the Ticket Status is changing from &quot;Assigned&quot; to &quot;Escalated&quot;, there must be a Type.</description>
        <errorConditionFormula>AND (
RecordType.DeveloperName = &quot;EDU_Ticketing&quot; ,
ISPICKVAL ( Type , &quot;&quot; ) ,
NOT ( ISPICKVAL ( Status , &quot;New&quot; ) ) ,
NOT ( ISPICKVAL ( Status , &quot;Assigned&quot; ) ) ,
NOT ( ISPICKVAL ( Status , &quot;Invalid&quot; ) )
)</errorConditionFormula>
        <errorDisplayField>Type</errorDisplayField>
        <errorMessage>You must typify the ticket first.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>GSO_Approval</fullName>
        <active>true</active>
        <errorConditionFormula>AND (
RecordType.Name =&quot;User Management Case Support&quot;, TEXT(Status) =&quot;Created&quot;,
OR(
TEXT(GSO_Approval__c)=&quot;Approved&quot;, 
TEXT(GSO_Approval__c)=&quot;Rejected&quot;
))</errorConditionFormula>
        <errorDisplayField>GSO_Approval__c</errorDisplayField>
        <errorMessage>Please do not select value as Approved or Rejected.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_Additional_Configuration_Details</fullName>
        <active>true</active>
        <description>NOKIASC-31168</description>
        <errorConditionFormula>AND( OR($RecordType.DeveloperName = &quot;HWS_Advance_Exchange_In_Days&quot;,
$RecordType.DeveloperName = &quot;HWS_Advance_Exchange_In_Hours&quot;, $RecordType.DeveloperName = &quot;HWS_Child_Case_Read_Only&quot;,
$RecordType.DeveloperName = &quot;HWS_Return_For_Repair&quot;,
$RecordType.DeveloperName = &quot;HWS_Spare_Part_Sales_Read_only&quot;,
$RecordType.DeveloperName = &quot;HWS_Spare_Part_Sales&quot;), ISCHANGED(HWS_Site_Information__c),  NOT( ISBLANK(HWS_FaultyUnitReceivedDate__c)))</errorConditionFormula>
        <errorDisplayField>HWS_Site_Information__c</errorDisplayField>
        <errorMessage>You can not change the &quot;Additional Configuration Details&quot; field value as the part is already been received in RLC (Reverse Logistic Center)</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_Child_Read_only_layout_Rule</fullName>
        <active>true</active>
        <description>This is for child case read only record type Status And Origin ischange validation when status is Ordered</description>
        <errorConditionFormula>AND(  $Setup.HWS_BypassStatusChangeValidation__c.HWS_BypassCaseStatusValidation__c =false,
ISPICKVAL( PRIORVALUE ( Status), &quot;Ordered&quot;),
 OR(ISCHANGED( Status),ISCHANGED( Origin),ISCHANGED(  CurrencyIsoCode)) , 
 OR($RecordType.Name = &quot;HWS Child Case Read Only&quot;,
   $RecordType.Name = &quot;HWS_Spare Part Sales Read only&quot;),
 $Profile.Name != &quot;Integration API Only Profile&quot;
)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>You can not change the Status and Origin or Currency Values Once Case Status Ordered .</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_Draft_ChildCase_Validation_on_Status</fullName>
        <active>false</active>
        <errorConditionFormula>AND(  $Setup.HWS_BypassStatusChangeValidation__c.HWS_BypassCaseStatusValidation__c =false,
OR(ISCHANGED(Status),ISCHANGED(CurrencyIsoCode)),
OR(ISPICKVAL(PRIORVALUE(Status), &quot;Draft&quot;),
ISPICKVAL(PRIORVALUE (Status), &quot;On Hold&quot;)),
$Profile.Name != &quot;Integration API Only Profile&quot; ,
OR($RecordType.Name = &quot;HWS Advance Exchange In Days&quot;,
$RecordType.Name = &quot;HWS Advance Exchange In Hours&quot;,
$RecordType.Name = &quot;HWS_Return For Repair&quot;,
$RecordType.Name = &quot;HWS_Spare Part Sales&quot;)
)</errorConditionFormula>
        <errorMessage>You can not change the Support Ticket Status values once Child case status Draft or on Hold.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_Parent_Read_only_layout_Rule</fullName>
        <active>true</active>
        <description>on Parent read only case</description>
        <errorConditionFormula>AND($Setup.HWS_BypassStatusChangeValidation__c.HWS_BypassCaseStatusValidation__c = false, HWS_CancelConfirm__c != &quot;AllowCancellation&quot;,
  OR(AND(ISCHANGED(Origin),$RecordType.Name=&quot;HWS_Parent Case Ready Only&quot;),
	AND(ISCHANGED(Status),
  OR($RecordType.Name=&quot;HWS_Parent Case Ready Only&quot;,
  $RecordType.Name = &quot;HWS Parent Case&quot;))),
 $Profile.Name != &quot;Integration API Only Profile&quot;
)</errorConditionFormula>
        <errorMessage>You can not change the Support Ticket Origin and Status values once Child case status ordered or Draft or  Parent Case Status is Not Closed.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_Phone_Validation</fullName>
        <active>true</active>
        <errorConditionFormula>AND(
OR(RecordType.DeveloperName == &apos;HWS_Case_Escalation&apos;,
RecordType.DeveloperName == &apos;HWS_Parent_Case&apos;,
RecordType.DeveloperName == &apos;HWS_Case_Escalation&apos;,
RecordType.DeveloperName == &apos;HWS_Parent_Case_Ready_Only&apos;,
RecordType.DeveloperName == &apos;HWS_Return_For_Repair&apos;,
RecordType.DeveloperName == &apos;HWS_Spare_Part_Sales&apos;,
RecordType.DeveloperName == &apos;HWS_Spare_Part_Sales_Read_only&apos;,
RecordType.DeveloperName == &apos;HWS_Advance_Exchange_In_Days&apos;,
RecordType.DeveloperName == &apos;HWS_Advance_Exchange_In_Hours&apos;),
OR(!REGEX(HWS_Shipment_Recipient_Phone__c,&quot;^[+]*[\\s0-9]*$&quot;),!REGEX(HWS_Fault_Reported_By_Phone__c,&quot;^[+]*[\\s0-9]*$&quot;)))</errorConditionFormula>
        <errorMessage>Please enter valid Phone number. Phone number should only  contain numeric values, spaces and can start with &apos;+&apos;.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_Prevent_Sponser_Update</fullName>
        <active>true</active>
        <description>Created as part of Nokiasc-34613</description>
        <errorConditionFormula>AND( OR(RecordType.DeveloperName == &apos;HWS_Case_Escalation&apos;,
RecordType.DeveloperName == &apos;HWS_Parent_Case&apos;,
RecordType.DeveloperName == &apos;HWS_Case_Escalation&apos;,
RecordType.DeveloperName == &apos;HWS_Parent_Case_Ready_Only&apos;,
RecordType.DeveloperName == &apos;HWS_Return_For_Repair&apos;,
RecordType.DeveloperName == &apos;HWS_Spare_Part_Sales&apos;,
RecordType.DeveloperName == &apos;HWS_Spare_Part_Sales_Read_only&apos;,
RecordType.DeveloperName == &apos;HWS_Advance_Exchange_In_Days&apos;,
RecordType.DeveloperName == &apos;HWS_Child_Case_Read_Only&apos;,
RecordType.DeveloperName == &apos;HWS_Advance_Exchange_In_Hours&apos;), !ISBLANK(HWS_FaultyUnitReceivedDate__c) , OR(ISCHANGED( HWS_Sponsor__c ), ISCHANGED( HWS_RelatedSoftwareTicketNumber__c ) ) )</errorConditionFormula>
        <errorMessage>Case Sponsor and Related Software Ticket Number fields cannot be modified after faulty unit has been received</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_RCA_FMA_Check</fullName>
        <active>true</active>
        <errorConditionFormula>HWS_RequestHWRCAFMA__c== true &amp;&amp; (ISBLANK( HWS_RelatedSoftwareTicketNumber__c) || ISBLANK( HWS_Sponsor__c))</errorConditionFormula>
        <errorMessage>Related Software Ticket Number and Sponsor are mandatory if Request HW RCA – FMA is checked</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>HWS_RCA_FMA_Field_Restrict_to_Modify</fullName>
        <active>true</active>
        <errorConditionFormula>PRIORVALUE( HWS_RequestHWRCAFMA__c )  != HWS_RequestHWRCAFMA__c &amp;&amp; (NOT(ISBLANK(HWS_FaultyUnitReceivedDate__c)) || TODAY() &gt; DATEVALUE(CreatedDate) + 90 )</errorConditionFormula>
        <errorMessage>Request HW RCA – FMA&quot; fields can not be modified as the Case is more than 90 days old or the defective part has been received</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Justification_needed_for_Critical_Ticket</fullName>
        <active>true</active>
        <description>Justification_needed_for_Critical_Ticket</description>
        <errorConditionFormula>AND( RecordTypeId =&apos;01241000000v9mH&apos;, 
ISPICKVAL(Priority,&quot;Critical&quot;), 
ISBLANK(Justification_for_Critical_Priority__c) 
)</errorConditionFormula>
        <errorMessage>Please enter business justification for critical priority tickets.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Prevent_modification_of_submitted_record</fullName>
        <active>true</active>
        <description>User Management: User cannot edit the record while it is already submitted for GSO approval.</description>
        <errorConditionFormula>AND (
RecordType.Name =&quot;User Management Case Support&quot;, TEXT(Status) =&quot;Queued For GSO Approval&quot;
)</errorConditionFormula>
        <errorMessage>You cannot edit the record while record is already submitted for approval.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Priority_is_required_when_ER_is_Selected</fullName>
        <active>true</active>
        <description>When Type is &apos;Enhancement requests&apos;, priority is required to be filled in.</description>
        <errorConditionFormula>AND( 
ISPICKVAL(Type,&apos;Enhancement Requests&apos;), 
ISBLANK (TEXT(Priority)) 
)</errorConditionFormula>
        <errorMessage>When Type is &apos;Enhancement requests&apos;, priority is required to be filled in.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Service_now_is_required</fullName>
        <active>true</active>
        <errorConditionFormula>AND( 
Escalated_to_Tier_3__c =TRUE, 
ISBLANK(Reference_Number__c) 
)</errorConditionFormula>
        <errorMessage>Please enter Reference number  before escalating to Tier 3</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Subject_and_Description_cannot_be_blank</fullName>
        <active>true</active>
        <description>Subject and  Description cannot be blank</description>
        <errorConditionFormula>AND(ISBLANK(Description)|| ISBLANK( Subject), 
RecordType.Name!= &apos;Indirect Reseller Application&apos;,
 RecordType.Name!= &apos;VAR Fast-Track Form&apos;, 
 RecordType.Name!=&apos;Upgrade Customer Entitlements&apos;,
 RecordType.Name!=&apos;HWS Parent Case&apos;,
 RecordType.Name!=&apos;HWS Advance Exchange In Days&apos;,
 RecordType.Name!=&apos;HWS_Parent Case Ready Only&apos;, 
 RecordType.Name!=&apos;HWS Child Case Read Only&apos;,
 RecordType.DeveloperName != &apos;HWS_Case_Escalation&apos;,
 RecordType.Name!=&apos;HWS Advance Exchange In Hours&apos;,
 RecordType.Name!=&apos;HWS_Spare Part Sales&apos;,
 RecordType.Name!=&apos;HWS_Spare Part Sales Read only&apos;,
 RecordType.Name!=&apos;HWS_Return For Repair&apos;,
 $Profile.Name != &apos;Data Loader Profile&apos;, 
RecordType.Name!= &apos;Upgrade Customer Entitlements&apos;, 
NOT( CONTAINS(RecordType.Name, &apos;Nokia&apos;)), RecordType.Name != &apos;Problem&apos;)</errorConditionFormula>
        <errorDisplayField>of_Employees_to_represent_Nokia_CP__c</errorDisplayField>
        <errorMessage>Subject and Description cannot be blank</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Territory_and_Sales_Role</fullName>
        <active>true</active>
        <errorConditionFormula>AND (
 RecordType.Name =&quot;User Management Case Support&quot;,
OR(
AND(
CONTAINS( TEXT(Sales_Roles__c ),TEXT(2)),
NOT(CONTAINS( Territory__c ,TEXT(2)))
),
AND(
CONTAINS( TEXT(Sales_Roles__c ),TEXT(3)),
NOT(CONTAINS( Territory__c ,TEXT(3)))
),
AND(
CONTAINS( TEXT(Sales_Roles__c ),TEXT(4)),
NOT(CONTAINS( Territory__c ,TEXT(4)))
),
AND(
CONTAINS( TEXT(Sales_Roles__c ),TEXT(5)),
NOT(CONTAINS( Territory__c ,TEXT(5)))
),
AND(
CONTAINS( TEXT(Sales_Roles__c ),TEXT(6)),
NOT(CONTAINS( Territory__c ,TEXT(6)))
),
AND(
CONTAINS( TEXT(Sales_Roles__c ),TEXT(7)),
NOT(CONTAINS( Territory__c ,TEXT(7)))
)
)
)</errorConditionFormula>
        <errorDisplayField>Sales_Roles__c</errorDisplayField>
        <errorMessage>Please select Territory and Sales Role on the same level.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Validation_Rule_On_BG_Approval</fullName>
        <active>true</active>
        <description>validation rule on BG Approval field that does not allow users to Approve and Deny for the same product.</description>
        <errorConditionFormula>OR(
 AND(INCLUDES(BG_Approval__c,&quot;Approved by Microwave&quot;),
     INCLUDES(BG_Approval__c,&quot;Denied by Microwave&quot;)),
 AND(INCLUDES(BG_Approval__c,&quot;Approved by Nuage&quot;),
     INCLUDES(BG_Approval__c,&quot;Denied by Nuage&quot;)),
	AND(INCLUDES(BG_Approval__c,&quot;Approved by Nuage&quot;),
     INCLUDES(BG_Approval__c,&quot;Denied by Nuage&quot;))
)</errorConditionFormula>
        <errorDisplayField>BG_Approval__c</errorDisplayField>
        <errorMessage>Both Approved and Denied cannot be selected for the same technology. 
Please select Approved or Denied.</errorMessage>
    </validationRules>
    <validationRules>
        <fullName>Validation_to_changing_status_manually</fullName>
        <active>true</active>
        <errorConditionFormula>AND( 
ISCHANGED( Status ) ,
OR( ISPICKVAL(Status , &apos;Approved by PSM&apos;) ,
ISPICKVAL(Status , &apos;Approved by Compliance&apos;),
ISPICKVAL(Status , &apos;Rejected&apos;)),
OR(RecordType.Name = &apos;Indirect Reseller Application&apos;, RecordType.Name = &apos;VAR Fast-Track Form&apos;,
RecordType.Name = &apos;IR/NIRA Sales to Country&apos;),
NOT(OR( $Profile.Name = &apos;System Administrator&apos;, 
    $Profile.Name = &apos;Data Loader Profile&apos;, 
    $Profile.Name = &apos;Nokia Admin Profile&apos;, 
     $Profile.Name = &apos;Integration API Only Profile&apos;,
     $Profile.Name = &apos;Nokia Sales Profile&apos;, 
    $Profile.Name = &apos;Global Process Admin Profile&apos;	
)),
NOT(Auto_Approved_By_System__c = true)
)</errorConditionFormula>
        <errorMessage>Use approval process on related tab or contact gss.partnersupport@nokia.com</errorMessage>
    </validationRules>
    <webLinks>
        <fullName>CH_GotoCaseTeam</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <encodingKey>UTF-8</encodingKey>
        <height>600</height>
        <linkType>url</linkType>
        <masterLabel>Go to Case Team</masterLabel>
        <openType>sidebar</openType>
        <protected>false</protected>
        <url>https://nokia--cchdev.lightning.force.com/lightning/r/{!Case.Id}/related/TeamMembers/view</url>
    </webLinks>
    <webLinks>
        <fullName>CH_ME_Manage_Escalation</fullName>
        <availability>online</availability>
        <displayType>button</displayType>
        <linkType>javascript</linkType>
        <masterLabel>Manage Escalation</masterLabel>
        <openType>onClickJavaScript</openType>
        <protected>false</protected>
        <url>{CH_Manage_Escalation__c}</url>
    </webLinks>
    <webLinks>
        <fullName>CH_Portal_Add_comments</fullName>
        <availability>online</availability>
        <description>Customer can add comment to an existing case</description>
        <displayType>button</displayType>
        <hasMenubar>false</hasMenubar>
        <hasScrollbars>true</hasScrollbars>
        <hasToolbar>false</hasToolbar>
        <height>600</height>
        <isResizable>true</isResizable>
        <linkType>page</linkType>
        <masterLabel>New Comment</masterLabel>
        <openType>newWindow</openType>
        <page>CH_Portal_Case_Response</page>
        <position>none</position>
        <protected>false</protected>
        <showsLocation>false</showsLocation>
        <showsStatus>false</showsStatus>
    </webLinks>
    <webLinks>
        <fullName>grax__Object_Time_Machine</fullName>
        <availability>online</availability>
        <description>Button to view records updated via Object Time Machine</description>
        <displayType>button</displayType>
        <encodingKey>UTF-8</encodingKey>
        <height>600</height>
        <linkType>url</linkType>
        <masterLabel>Object Time Machine</masterLabel>
        <openType>noSidebar</openType>
        <protected>false</protected>
        <url>/apex/grax__GRAXTimeMachine?Id={!Case.Id}&amp;recordName={!Case.CaseNumber}</url>
    </webLinks>
    <webLinks>
        <fullName>grax__Restore</fullName>
        <availability>online</availability>
        <description>Button to be used to view backed up/archived records via GRAX</description>
        <displayType>button</displayType>
        <encodingKey>UTF-8</encodingKey>
        <height>600</height>
        <linkType>url</linkType>
        <masterLabel>Restore</masterLabel>
        <openType>noSidebar</openType>
        <protected>false</protected>
        <url>/apex/grax__GRAXRestore?Id={!Account.Id}&amp;recordName={!Account.Name}</url>
    </webLinks>
</CustomObject>
